{
	"name": "FLOW_LOAD_fac_compras",
	"properties": {
		"folder": {
			"name": "3.load"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SQL_VALIDATION_LT_detalle_ordenes",
						"type": "DatasetReference"
					},
					"name": "DetalleOrdenes"
				},
				{
					"dataset": {
						"referenceName": "DS_SQL_VALIDATION_tb_detalle_envios",
						"type": "DatasetReference"
					},
					"name": "DetalleEnvios"
				},
				{
					"dataset": {
						"referenceName": "DS_SQL_VALIDATION_Regiones",
						"type": "DatasetReference"
					},
					"name": "Regiones"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "SplitRegiones"
				},
				{
					"name": "ProcesarRegionMenor",
					"flowlet": {
						"referenceName": "FLOWLET_LOAD_fac_compras",
						"type": "DataFlowReference"
					}
				},
				{
					"name": "ProcesarRegionMayor",
					"flowlet": {
						"referenceName": "FLOWLET_LOAD_fac_compras",
						"type": "DataFlowReference"
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Detalle Orden} as integer,",
				"          {Numero Orden} as string,",
				"          {Producto ID} as integer,",
				"          {Linea Total} as double,",
				"          Cantidad as integer,",
				"          Descuento as double,",
				"          {Precio Unitario} as double,",
				"          Ganancia as double,",
				"          region_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DetalleOrdenes",
				"source(output(",
				"          num_order as string,",
				"          fec_orden as date,",
				"          fec_envio as date,",
				"          modo_envio as integer,",
				"          cliente_id as integer,",
				"          imp_subtotal as double,",
				"          region_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DetalleEnvios",
				"source(output(",
				"          {Region ID} as integer,",
				"          {Region Desc} as string,",
				"          {Detalle region} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Regiones",
				"DetalleOrdenes split(region_id < 7,",
				"     region_id >= 7,",
				"     disjoint: false) ~> SplitRegiones@(RegionDesde0a6, RegionDesde7a21)",
				"SplitRegiones@RegionDesde0a6, DetalleEnvios, Regiones compose(mapColumn(",
				"          {Detalle Orden},",
				"          {Numero Orden},",
				"          {Producto ID},",
				"          {Linea Total},",
				"          Cantidad,",
				"          Descuento,",
				"          {Precio Unitario},",
				"          Ganancia,",
				"          region_id = {Detalle Orden}",
				"     ),mapColumn(",
				"          num_order = {Detalle Orden},",
				"          fec_orden = {Detalle Orden},",
				"          fec_envio = {Detalle Orden},",
				"          modo_envio = {Detalle Orden},",
				"          cliente_id = {Detalle Orden},",
				"          imp_subtotal = {Detalle Orden},",
				"          region_id = {Detalle Orden}",
				"     ),mapColumn(",
				"          id_region = {Detalle Orden},",
				"          desc_region = {Detalle Orden},",
				"          desc_detalle = {Detalle Orden}",
				"     ),",
				"     composition: 'FLOWLET_LOAD_fac_compras') ~> ProcesarRegionMenor@(FacCompras)",
				"SplitRegiones@RegionDesde7a21, DetalleEnvios, Regiones compose(mapColumn(",
				"          {Detalle Orden},",
				"          {Numero Orden},",
				"          {Producto ID},",
				"          {Linea Total},",
				"          Cantidad,",
				"          Descuento,",
				"          {Precio Unitario},",
				"          Ganancia,",
				"          region_id = SplitRegiones@RegionDesde7a21@region_id",
				"     ),mapColumn(",
				"          num_order,",
				"          fec_orden,",
				"          fec_envio,",
				"          modo_envio,",
				"          cliente_id,",
				"          imp_subtotal,",
				"          region_id = DetalleEnvios@region_id",
				"     ),mapColumn(",
				"          id_region = {Region ID},",
				"          desc_region = {Region Desc},",
				"          desc_detalle = {Detalle region}",
				"     ),",
				"     composition: 'FLOWLET_LOAD_fac_compras') ~> ProcesarRegionMayor@(FacCompras)"
			]
		}
	}
}