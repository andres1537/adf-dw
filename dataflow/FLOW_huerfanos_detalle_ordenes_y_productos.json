{
	"name": "FLOW_huerfanos_detalle_ordenes",
	"properties": {
		"folder": {
			"name": "2.transform/huerfanos"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SQL_VALIDATION_LT_detalle_ordenes",
						"type": "DatasetReference"
					},
					"name": "DetalleOrdenes"
				},
				{
					"dataset": {
						"referenceName": "DS_SQL_VALIDATION_LT_productos",
						"type": "DatasetReference"
					},
					"name": "Productos"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SQL_VALIDATION_LT_productos",
						"type": "DatasetReference"
					},
					"name": "CrearPadresFicticios",
					"rejectedDataLinkedService": {
						"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "ListaHuerfanos"
				},
				{
					"name": "ListaIDsHuerfanos"
				},
				{
					"name": "ListaPadresFicticios"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Detalle Orden} as integer,",
				"          {Numero Orden} as string,",
				"          {Producto ID} as integer,",
				"          {Linea Total} as double,",
				"          Cantidad as integer,",
				"          Descuento as double,",
				"          {Precio Unitario} as double,",
				"          Ganancia as double,",
				"          region_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DetalleOrdenes",
				"source(output(",
				"          {Producto ID} as integer,",
				"          {Numero Producto} as string,",
				"          {Producto Sub Categoria ID} as string,",
				"          {Nombre Producto} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Productos",
				"DetalleOrdenes, Productos exists(DetalleOrdenes@{Producto ID} == Productos@{Producto ID},",
				"     negate:true,",
				"     broadcast: 'auto')~> ListaHuerfanos",
				"ListaHuerfanos select(mapColumn(",
				"          id_producto = {Producto ID}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
				"ListaIDsHuerfanos derive(id_producto = id_producto,",
				"          desc_referencia = \"huérfano de detalle_ordenes\",",
				"          id_subcategoria_producto = \"huérfano de detalle_ordenes\",",
				"          desc_nombre = \"huérfano de detalle_ordenes\") ~> ListaPadresFicticios",
				"ListaPadresFicticios sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Producto ID} as integer,",
				"          {Numero Producto} as string,",
				"          {Producto Sub Categoria ID} as string,",
				"          {Nombre Producto} as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     outputRejectedData: true,",
				"     mapColumn(",
				"          {Producto ID} = id_producto,",
				"          {Numero Producto} = desc_referencia,",
				"          {Producto Sub Categoria ID} = id_subcategoria_producto,",
				"          {Nombre Producto} = desc_nombre",
				"     )) ~> CrearPadresFicticios"
			]
		}
	}
}