{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "gr2013-df"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_regiones')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_Regiones",
								"type": "DatasetReference"
							},
							"name": "StagingRegiones"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_Regiones",
								"type": "DatasetReference"
							},
							"name": "ValidationRegiones",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ConversionColumnas"
						},
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Region ID} as string,",
						"          {Region Desc} as string,",
						"          {Detalle region} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingRegiones",
						"StagingRegiones derive({Region ID} = toInteger(\r",
						"    case ( \r",
						"        (isNull({Region ID}) || (upper({Region ID}) == 'NULL')), '', {Region ID} \r",
						"    )\r",
						")) ~> ConversionColumnas",
						"ConversionColumnas filter(and(not(isNull({Region ID})), {Region ID} > 0)) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy({Region ID}),",
						"     {Region Desc} = first({Region Desc}),",
						"          {Detalle region} = first({Detalle region})) ~> RemoverDuplicados",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Region ID} as integer,",
						"          {Region Desc} as string,",
						"          {Detalle region} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Region ID},",
						"          {Region Desc},",
						"          {Detalle region}",
						"     )) ~> ValidationRegiones"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_subcategorias_producto')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "StagingSubcategoriasProducto"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "ValidationSubcategoriasProducto",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						},
						{
							"name": "ConversionColumnas"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingSubcategoriasProducto",
						"ConversionColumnas filter({Subcategoria Producto ID} != '') ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy({Subcategoria Producto ID}),",
						"     {Categoria Producto ID} = first({Categoria Producto ID}),",
						"          {Descripcion Subcategoria} = first({Descripcion Subcategoria})) ~> RemoverDuplicados",
						"StagingSubcategoriasProducto derive({Subcategoria Producto ID} = case ( \r",
						"    (isNull({Subcategoria Producto ID}) || (upper({Subcategoria Producto ID}) == 'NULL')), '', {Subcategoria Producto ID} \r",
						")) ~> ConversionColumnas",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Subcategoria Producto ID},",
						"          {Categoria Producto ID},",
						"          {Descripcion Subcategoria}",
						"     )) ~> ValidationSubcategoriasProducto"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_target_region')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_db_target_region",
								"type": "DatasetReference"
							},
							"name": "StagingTargetRegion"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_db_target_region",
								"type": "DatasetReference"
							},
							"name": "ValidationTargetRegionn",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "ConversionColumnas"
						}
					],
					"scriptLines": [
						"source(output(",
						"          fecha as string,",
						"          anio as string,",
						"          mes as string,",
						"          {Region ID} as string,",
						"          Target as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingTargetRegion",
						"ConversionColumnas filter(not(isNull(fecha)) &&\r",
						"and(not(isNull(anio)), anio > 0) &&\r",
						"and(not(isNull(mes)), mes > 0) &&\r",
						"and(not(isNull({Region ID})), {Region ID} > 0) &&\r",
						"and(not(isNull(Target)), Target > 0)) ~> FiltrarInconsistencias",
						"StagingTargetRegion derive(fecha = toDate(\r",
						"    case ( \r",
						"        (isNull(fecha) || (upper(fecha) == 'NULL')), '', fecha\r",
						"    ), 'yyyyMM'\r",
						"),",
						"          anio = toInteger(\r",
						"    case ( \r",
						"        (isNull(anio) || (upper(anio) == 'NULL')), '', anio\r",
						"    )\r",
						"),",
						"          mes = toInteger(\r",
						"    case ( \r",
						"        (isNull(mes) || (upper(mes) == 'NULL')), '', mes\r",
						"    )\r",
						"),",
						"          {Region ID} = toInteger(    case (         (isNull({Region ID}) || (upper({Region ID}) == 'NULL')), '', {Region ID}     )),",
						"          Target = toDecimal(\r",
						"    case ( \r",
						"        (isNull(Target) || (upper(Target) == 'NULL')), '', replace(trim(Target), ',', '')\r",
						"    ), 12, 2\r",
						")) ~> ConversionColumnas",
						"FiltrarInconsistencias sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          fecha as date,",
						"          anio as integer,",
						"          mes as integer,",
						"          {Region ID} as integer,",
						"          Target as decimal(12,2)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          fecha,",
						"          anio,",
						"          mes,",
						"          {Region ID},",
						"          Target",
						"     )) ~> ValidationTargetRegionn"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_tipos_envio')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_tb_tipo_envio",
								"type": "DatasetReference"
							},
							"name": "StagingTiposEnvio"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_tipo_envio",
								"type": "DatasetReference"
							},
							"name": "ValidationTiposEnvio",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ConversionColumnas"
						},
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_tipo as string,",
						"          Descripcion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingTiposEnvio",
						"StagingTiposEnvio derive(id_tipo = toInteger(\r",
						"    case ( \r",
						"        (isNull({id_tipo}) || (upper({id_tipo}) == 'NULL')), '', {id_tipo} \r",
						"    )\r",
						")) ~> ConversionColumnas",
						"ConversionColumnas filter(and(not(isNull(id_tipo)), id_tipo > 0)) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy(id_tipo),",
						"     Descripcion = first(Descripcion)) ~> RemoverDuplicados",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_tipo as integer,",
						"          Descripcion as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          id_tipo,",
						"          Descripcion",
						"     )) ~> ValidationTiposEnvio"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_categorias_producto')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_categoria",
								"type": "DatasetReference"
							},
							"name": "Categorias"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "Subcategorias"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios"
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Categoria} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Categorias",
						"source(output(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Subcategorias",
						"Categorias, Subcategorias exists(Categorias@{Categoria Producto ID} == Subcategorias@{Categoria Producto ID},",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_categoria_producto = {Categoria Producto ID}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_subcategoria_producto = \" \",",
						"          id_categoria_producto = id_categoria_producto,",
						"          desc_subcategoria = \"huérfano de categorias_producto\") ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id_tipo = id_subcategoria_producto,",
						"          Descripcion = desc_subcategoria",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_modos_envio')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_modo_envio",
								"type": "DatasetReference"
							},
							"name": "ModosEnvio"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_tipo_envio",
								"type": "DatasetReference"
							},
							"name": "TiposEnvio"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_tipo_envio",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios"
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_modo as integer,",
						"          Descripcion as string,",
						"          Tipo_x0020_ID as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ModosEnvio",
						"source(output(",
						"          id_tipo as integer,",
						"          Descripcion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> TiposEnvio",
						"ModosEnvio, TiposEnvio exists(Tipo_x0020_ID == id_tipo,",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_tipo_envio = Tipo_x0020_ID",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_tipo_envio = id_tipo_envio,",
						"          desc_tipo_envio = \"huérfano de modos_envio\") ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_tipo as integer,",
						"          Descripcion as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id_tipo = id_tipo_envio,",
						"          Descripcion = desc_tipo_envio",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos",
								"type": "DatasetReference"
							},
							"name": "Productos"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "Subcategorias"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios"
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Producto ID} as integer,",
						"          {Numero Producto} as string,",
						"          {Producto Sub Categoria ID} as string,",
						"          {Nombre Producto} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Productos",
						"source(output(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Subcategorias",
						"Productos, Subcategorias exists({Producto Sub Categoria ID} == {Subcategoria Producto ID},",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_subcategoria_producto = {Producto Sub Categoria ID}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_subcategoria_producto = id_subcategoria_producto,",
						"          id_categoria_producto = \" \",",
						"          desc_subcategoria = \"huérfano de productos\") ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id_tipo = id_subcategoria_producto,",
						"          Descripcion = desc_subcategoria",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOAD_diario')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_fac_compras",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_fac_compras",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DetalleOrdenes": {},
									"DetalleEnvios": {},
									"Regiones": {},
									"FacCompras": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3.load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOAD_mensual')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Productos": {},
									"Subcategorias": {},
									"Categorias": {},
									"DimProductos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_LOAD_fac_targets",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_fac_targets",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Targets": {},
									"FacTargets": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3.load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOAD_semanal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Clientes": {},
									"ClienteLocalizacion": {},
									"DimClientes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3.load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOAD_trimestral')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_modos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_modos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ModosEnvio": {},
									"TiposEnvio": {},
									"DimModosEnvio": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_LOAD_dim_fechas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_fechas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Fechas": {},
									"DimFechas": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_LOAD_dim_regiones",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_regiones",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Regiones": {},
									"DimRegiones": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3.load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRANFORM_dim_clientes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "FLOW_VALIDATION_clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingClientes": {},
									"ValidationClientes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_VALIDATION_cliente_localizacion",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_cliente_localizacion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingClienteLocalizacion": {},
									"ValidationClienteLocalizacion": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRANFORM_dim_fechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "FLOW_VALIDATION_fechas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_fechas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingFechas": {},
									"ValidationFechas": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRANFORM_dim_regiones')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "FLOW_VALIDATION_regiones",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_regiones",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingRegiones": {},
									"ValidationRegiones": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_regiones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRANFORM_fac_compras')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "FLOW_VALIDATION_detalle_envios",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_detalle_envios",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingDetalleEnvios": {},
									"ValidationDetalleEnvios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_VALIDATION_detalle_ordenes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_detalle_ordenes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingDetalleOrdenes": {},
									"ValidationDetalleOrdenes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRANFORM_fac_targets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "FLOW_VALIDATION_target_region",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_target_region",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingTargetRegion": {},
									"ValidationTargetRegionn": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_target_region')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRANSFORM_dim_modos_envio')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_modos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_modos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingModosEnvio": {},
									"ValidationModosEnvio": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_modos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_VALIDATION_modos_envio",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "FLOW_VALIDATION_tipos_envio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_modos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ModosEnvio": {},
									"TiposEnvio": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_VALIDATION_tipos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_tipos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingTiposEnvio": {},
									"ValidationTiposEnvio": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_modos_envio')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_tipos_envio')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRANSFORM_dim_productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingProductos": {},
									"ValidationProductos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_VALIDATION_categorias_producto",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_categorias_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingCategoriasProducto": {},
									"ValidationCategoriasProducto": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_VALIDATION_subcategorias_producto",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_subcategorias_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingSubcategoriasProducto": {},
									"ValidationSubcategoriasProducto": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_VALIDATION_productos",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "FLOW_VALIDATION_categorias_producto",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "FLOW_VALIDATION_subcategorias_producto",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Productos": {},
									"Subcategorias": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_categorias_producto",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_huerfanos_productos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_categorias_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Categorias": {},
									"Subcategorias": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_subcategorias_producto')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_productos')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_categorias_producto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_LOAD_dim_clientes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Clientes": {},
									"ClienteLocalizacion": {},
									"DimClientes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T07:06:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_LOAD_dim_fechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_fechas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_fechas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Fechas": {},
									"DimFechas": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T07:06:31Z"
			},
			"dependsOn": []
		}
	]
}