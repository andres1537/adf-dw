{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "gr2013-df"
		},
		"LS_FILESTORAGE_SOURCE_banmarket_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_FILESTORAGE_SOURCE_banmarket'"
		},
		"LS_SQL_SOURCE_banmarket_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_SOURCE_banmarket'"
		},
		"LS_SQL_TARGET_dw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_TARGET_dw'"
		},
		"LS_GITHUB_SOURCE_raw_banmarket_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/here4data/DWH/main/Sources/"
		},
		"LS_GITHUB_SOURCE_zip_customer_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com/here4data/DWH/blob/main/Sources/LT_customer.zip?raw=true"
		},
		"LS_GITHUB_SOURCE_zip_customer_localizacion_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com/here4data/DWH/blob/main/Sources/lt_customer_localizacion.zip?raw=true"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_FILESTORAGE_SOURCE_banmarket')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_FILESTORAGE_SOURCE_banmarket_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_GITHUB_SOURCE_raw_banmarket')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_GITHUB_SOURCE_raw_banmarket_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_GITHUB_SOURCE_zip_customer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_GITHUB_SOURCE_zip_customer_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_GITHUB_SOURCE_zip_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_GITHUB_SOURCE_zip_customer_localizacion_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_SOURCE_banmarket')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_SOURCE_banmarket_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_TARGET_dw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_TARGET_dw_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOWLET_LOAD_fac_compras')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3.load"
				},
				"type": "Flowlet",
				"typeProperties": {
					"sources": [],
					"sinks": [],
					"transformations": [
						{
							"name": "JoinDetalleEnvios"
						},
						{
							"name": "JoinRegiones"
						},
						{
							"name": "SeleccionarColumnas"
						},
						{
							"name": "Auditoria"
						},
						{
							"name": "Metricas"
						},
						{
							"name": "DetalleOrdenes"
						},
						{
							"name": "DetalleEnvios"
						},
						{
							"name": "Regiones"
						},
						{
							"name": "FacCompras"
						}
					],
					"scriptLines": [
						"input(output(",
						"          {Detalle Orden} as integer,",
						"          {Numero Orden} as string,",
						"          {Producto ID} as integer,",
						"          {Linea Total} as double,",
						"          Cantidad as integer,",
						"          Descuento as double,",
						"          {Precio Unitario} as double,",
						"          Ganancia as double,",
						"          region_id as integer",
						"     ),",
						"     order: 0) ~> DetalleOrdenes",
						"input(output(",
						"          num_order as string,",
						"          fec_orden as date,",
						"          fec_envio as date,",
						"          modo_envio as integer,",
						"          cliente_id as integer,",
						"          imp_subtotal as double,",
						"          region_id as integer",
						"     ),",
						"     order: 1) ~> DetalleEnvios",
						"input(output(",
						"          id_region as integer,",
						"          desc_region as string,",
						"          desc_detalle as string",
						"     ),",
						"     order: 2) ~> Regiones",
						"DetalleOrdenes, DetalleEnvios join({Numero Orden} == num_order",
						"     && DetalleOrdenes@region_id == DetalleEnvios@region_id,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> JoinDetalleEnvios",
						"JoinDetalleEnvios, Regiones join(DetalleOrdenes@region_id == id_region,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> JoinRegiones",
						"JoinRegiones select(mapColumn(",
						"          {Detalle Orden},",
						"          {Numero Orden},",
						"          {Producto ID},",
						"          {Linea Total},",
						"          Cantidad,",
						"          Descuento,",
						"          {Precio Unitario},",
						"          Ganancia,",
						"          num_order,",
						"          fec_orden,",
						"          fec_envio,",
						"          modo_envio,",
						"          cliente_id,",
						"          imp_subtotal,",
						"          id_region,",
						"          desc_region,",
						"          desc_detalle",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SeleccionarColumnas",
						"Metricas derive(fec_modificacion = fromUTC(currentUTC(), 'America/Bogota')) ~> Auditoria",
						"SeleccionarColumnas derive(precio_total = {Precio Unitario} * Cantidad,",
						"          ganancia_neta = Ganancia - (({Precio Unitario} * 12 / 100) * Cantidad) - (({Precio Unitario} * 3 / 100) * Cantidad),",
						"          impuestos = Ganancia * 19 / 100,",
						"          valor_logistica = ({Precio Unitario} * 12 / 100) * Cantidad,",
						"          valor_provision_covid = ({Precio Unitario} * 3 / 100) * Cantidad) ~> Metricas",
						"Auditoria output(mapColumn(",
						"          {Detalle Orden},",
						"          {Numero Orden},",
						"          {Producto ID},",
						"          {Linea Total},",
						"          Cantidad,",
						"          Descuento,",
						"          {Precio Unitario},",
						"          Ganancia,",
						"          num_order,",
						"          fec_orden,",
						"          fec_envio,",
						"          modo_envio,",
						"          cliente_id,",
						"          imp_subtotal,",
						"          id_region,",
						"          desc_region,",
						"          desc_detalle,",
						"          precio_total,",
						"          ganancia_neta,",
						"          impuestos,",
						"          valor_logistica,",
						"          valor_provision_covid,",
						"          fec_modificacion",
						"     )) ~> FacCompras"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FILESTORAGE_SOURCE_LT_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LT_customer.zip",
						"folderPath": "github",
						"container": "source"
					},
					"columnDelimiter": ";",
					"compressionCodec": "ZipDeflate",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Cliente ID",
						"type": "String"
					},
					{
						"name": "Nombre",
						"type": "String"
					},
					{
						"name": "Apellido",
						"type": "String"
					},
					{
						"name": "Segmento",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FILESTORAGE_SOURCE_LT_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "lt_customer_localizacion.zip",
						"folderPath": "github",
						"container": "source"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "ZipDeflate",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Cliente ID",
						"type": "String"
					},
					{
						"name": "Pais",
						"type": "String"
					},
					{
						"name": "Ciudad",
						"type": "String"
					},
					{
						"name": "Estado",
						"type": "String"
					},
					{
						"name": "Codigo Postal",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FILESTORAGE_SOURCE_fechas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "fechas.csv",
						"container": "source"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id_fecha",
						"type": "String"
					},
					{
						"name": "num_anio",
						"type": "String"
					},
					{
						"name": "num_trimestre",
						"type": "String"
					},
					{
						"name": "num_mes",
						"type": "String"
					},
					{
						"name": "num_dia",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FILESTORAGE_ZIP_LT_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LT_customer.zip",
						"folderPath": "github",
						"container": "source"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FILESTORAGE_ZIP_LT_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "lt_customer_localizacion",
						"folderPath": "github",
						"container": "source"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_LT_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_zip_customer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_zip_customer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_LT_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_zip_customer_localizacion",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_zip_customer_localizacion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_LT_productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "LT_productos.csv"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_LT_productos_categoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "LT_productos_categoria.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_LT_productos_sub_categoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "LT_productos_sub_categoria.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_Regiones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "Regiones.txt"
					},
					"columnDelimiter": "\t",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Region ID",
						"type": "String"
					},
					{
						"name": "Region Desc",
						"type": "String"
					},
					{
						"name": "Detalle region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_db_target_region')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "db_target_region.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		}
	]
}