{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "gr2013-df"
		},
		"LS_FILESTORAGE_SOURCE_banmarket_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_FILESTORAGE_SOURCE_banmarket'"
		},
		"LS_SQL_SOURCE_banmarket_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_SOURCE_banmarket'"
		},
		"LS_SQL_TARGET_dw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_TARGET_dw'"
		},
		"LS_GITHUB_SOURCE_raw_banmarket_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/here4data/DWH/main/Sources/"
		},
		"LS_GITHUB_SOURCE_zip_customer_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com/here4data/DWH/blob/main/Sources/LT_customer.zip?raw=true"
		},
		"LS_GITHUB_SOURCE_zip_customer_localizacion_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com/here4data/DWH/blob/main/Sources/lt_customer_localizacion.zip?raw=true"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_DIARIO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_DIARIO_EXTRACT",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DIARIO_EXTRACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DIARIO_TRANSFORM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DIARIO_EXTRACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DIARIO_TRANSFORM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DIARIO_LOAD",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_DIARIO_TRANSFORM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DIARIO_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-27T12:01:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DIARIO_EXTRACT')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DIARIO_TRANSFORM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DIARIO_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DIARIO_EXTRACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "detalle_ordenes a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "maestria.LT_detalle_ordenes"
							},
							{
								"name": "Destination",
								"value": "staging.LT_detalle_ordenes"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.LT_detalle_ordenes",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Detalle Orden",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Detalle Orden",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Numero Orden",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Numero Orden",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Producto ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Producto ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Linea Total",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Linea Total",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Cantidad",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Cantidad",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Descuento",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Descuento",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Precio Unitario",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Precio Unitario",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Ganancia",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Ganancia",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "region_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "region_id",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_SOURCE_LT_detalle_ordenes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_LT_detalle_ordenes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "detalle_envios a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "maestria.tb_detalle_envios"
							},
							{
								"name": "Destination",
								"value": "staging.tb_detalle_envios"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.tb_detalle_envios",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "num_order",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "num_order",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fec_orden",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "fec_orden",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "fec_envio",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "fec_envio",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "modo_envio",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "modo_envio",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "cliente_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "imp_subtotal",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "imp_subtotal",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "region_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "region_id",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_SOURCE_tb_detalle_envios",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_tb_detalle_envios",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1.extract"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_SOURCE_LT_detalle_ordenes')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_LT_detalle_ordenes')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_SOURCE_tb_detalle_envios')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_tb_detalle_envios')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DIARIO_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_fac_compras",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_fac_compras",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DetalleOrdenes": {},
									"DetalleEnvios": {},
									"Regiones": {},
									"FacCompras": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3.load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_fac_compras')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DIARIO_TRANFORM_fac_compras')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "FLOW_VALIDATION_detalle_envios",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_detalle_envios",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingDetalleEnvios": {},
									"ValidationDetalleEnvios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_VALIDATION_detalle_ordenes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_detalle_ordenes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingDetalleOrdenes": {},
									"ValidationDetalleOrdenes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_detalle_ordenes_y_productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_VALIDATION_detalle_envios",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "FLOW_VALIDATION_detalle_ordenes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_detalle_ordenes_y_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DetalleOrdenes": {},
									"Productos": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_detalle_ordenes_y_regiones",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_huerfanos_detalle_ordenes_y_productos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_detalle_ordenes_y_regiones",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DetalleOrdenes": {},
									"Regiones": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_detalle_envios_y_modo_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_huerfanos_detalle_ordenes_y_regiones",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_detalle_envios_y_modo_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DetalleEnvios": {},
									"ModosEnvio": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_detalle_envios_y_regiones",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_huerfanos_detalle_envios_y_clientes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_detalle_envios_y_regiones",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DetalleEnvios": {},
									"Regiones": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_detalle_envios_y_clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_huerfanos_detalle_envios_y_modo_envio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_detalle_envios_y_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DetalleEnvios": {},
									"Clientes": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_detalle_envios')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_detalle_ordenes')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_detalle_ordenes_y_productos')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_detalle_ordenes_y_regiones')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_detalle_envios_y_modo_envio')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_detalle_envios_y_regiones')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_detalle_envios_y_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DIARIO_TRANSFORM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_DIARIO_TRANFORM_fac_compras",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DIARIO_TRANFORM_fac_compras",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DIARIO_TRANFORM_fac_compras')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MENSUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_MENSUAL_EXTRACT",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MENSUAL_EXTRACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MENSUAL_TRANSFORM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MENSUAL_EXTRACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MENSUAL_TRANSFORM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MENSUAL_LOAD",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MENSUAL_TRANSFORM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MENSUAL_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-27T12:01:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_MENSUAL_EXTRACT')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MENSUAL_TRANSFORM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MENSUAL_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MENSUAL_EXTRACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "productos_sub_categoria a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "LT_productos_sub_categoria.csv"
							},
							{
								"name": "Destination",
								"value": "staging.LT_productos_sub_categoria"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.LT_productos_sub_categoria",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GITHUB_SOURCE_LT_productos_sub_categoria",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_LT_productos_sub_categoria",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "productos_categoria a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "LT_productos_categoria.csv"
							},
							{
								"name": "Destination",
								"value": "staging.LT_productos_categoria"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.LT_productos_categoria",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Categoria Producto ID",
											"type": "String"
										},
										"sink": {
											"name": "Categoria Producto ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Descripcion Categoria",
											"type": "String"
										},
										"sink": {
											"name": "Descripcion Categoria",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GITHUB_SOURCE_LT_productos_categoria",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_LT_productos_categoria",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "productos a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "LT_productos.csv"
							},
							{
								"name": "Destination",
								"value": "staging.LT_productos"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.LT_productos",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Producto ID",
											"type": "String"
										},
										"sink": {
											"name": "Producto ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Numero Producto",
											"type": "String"
										},
										"sink": {
											"name": "Numero Producto",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Producto Sub Categoria ID",
											"type": "String"
										},
										"sink": {
											"name": "Producto Sub Categoria ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Nombre Producto",
											"type": "String"
										},
										"sink": {
											"name": "Nombre Producto",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GITHUB_SOURCE_LT_productos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_LT_productos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "target_region a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "db_target_region.csv"
							},
							{
								"name": "Destination",
								"value": "staging.db_target_region"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.db_target_region",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "fecha",
											"type": "String"
										},
										"sink": {
											"name": "fecha",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Año",
											"type": "String"
										},
										"sink": {
											"name": "anio",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mes",
											"type": "String"
										},
										"sink": {
											"name": "mes",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Region ID",
											"type": "String"
										},
										"sink": {
											"name": "Region ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Target",
											"type": "String"
										},
										"sink": {
											"name": "Target",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GITHUB_SOURCE_db_target_region",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_db_target_region",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1.extract"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_GITHUB_SOURCE_LT_productos_sub_categoria')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_LT_productos_sub_categoria')]",
				"[concat(variables('factoryId'), '/datasets/DS_GITHUB_SOURCE_LT_productos_categoria')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_LT_productos_categoria')]",
				"[concat(variables('factoryId'), '/datasets/DS_GITHUB_SOURCE_LT_productos')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_LT_productos')]",
				"[concat(variables('factoryId'), '/datasets/DS_GITHUB_SOURCE_db_target_region')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_db_target_region')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MENSUAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Productos": {},
									"Subcategorias": {},
									"Categorias": {},
									"DimProductos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_LOAD_fac_targets",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_fac_targets",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Targets": {},
									"FacTargets": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3.load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_dim_productos')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_fac_targets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MENSUAL_TRANFORM_fac_targets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "FLOW_VALIDATION_target_region",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_target_region",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingTargetRegion": {},
									"ValidationTargetRegionn": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_target_region')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MENSUAL_TRANSFORM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_MENSUAL_TRANSFORM_dim_productos",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MENSUAL_TRANSFORM_dim_productos",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_MENSUAL_TRANFORM_fac_targets",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MENSUAL_TRANFORM_fac_targets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_MENSUAL_TRANSFORM_dim_productos')]",
				"[concat(variables('factoryId'), '/pipelines/PL_MENSUAL_TRANFORM_fac_targets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MENSUAL_TRANSFORM_dim_productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingProductos": {},
									"ValidationProductos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_VALIDATION_categorias_producto",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_categorias_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingCategoriasProducto": {},
									"ValidationCategoriasProducto": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_VALIDATION_subcategorias_producto",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_subcategorias_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingSubcategoriasProducto": {},
									"ValidationSubcategoriasProducto": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_productos_y_subcategorias",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_VALIDATION_productos",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "FLOW_VALIDATION_categorias_producto",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "FLOW_VALIDATION_subcategorias_producto",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_productos_y_subcategorias",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Productos": {},
									"Subcategorias": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_categorias_y_subcategorias",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_huerfanos_productos_y_subcategorias",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_categorias_y_subcategorias",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Categorias": {},
									"Subcategorias": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_productos')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_categorias_producto')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_subcategorias_producto')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_productos_y_subcategorias')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_categorias_y_subcategorias')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SEMANAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_SEMANAL_EXTRACT",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SEMANAL_EXTRACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_SEMANAL_TRANSFORM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_SEMANAL_EXTRACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SEMANAL_TRANSFORM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_SEMANAL_LOAD",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_SEMANAL_TRANSFORM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SEMANAL_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-27T12:01:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_SEMANAL_EXTRACT')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SEMANAL_TRANSFORM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SEMANAL_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SEMANAL_EXTRACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "customerZIP a FILESTORAGE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GITHUB_SOURCE_LT_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_FILESTORAGE_ZIP_LT_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "customerCSV a STAGING",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "customerZIP a FILESTORAGE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "source/github/LT_customer.zip"
							},
							{
								"name": "Destination",
								"value": "staging.LT_customer"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.LT_customer",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cliente ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cliente ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Nombre",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Nombre",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Apellido",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Apellido",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Segmento",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segmento",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_FILESTORAGE_SOURCE_LT_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_LT_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "customerLocalizacionZIP a FILESTORAGE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GITHUB_SOURCE_LT_customer_localizacion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_FILESTORAGE_ZIP_LT_customer_localizacion",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "customerLocalizacionCSV a STAGING",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "customerLocalizacionZIP a FILESTORAGE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "source/github/lt_customer_localizacion.zip"
							},
							{
								"name": "Destination",
								"value": "staging.lt_customer_localizacion"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.lt_customer_localizacion",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Cliente ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cliente ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Pais",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pais",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ciudad",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ciudad",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Estado",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Estado",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Codigo Postal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Codigo Postal",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_FILESTORAGE_SOURCE_LT_customer_localizacion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_lt_customer_localizacion",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1.extract"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_GITHUB_SOURCE_LT_customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_FILESTORAGE_ZIP_LT_customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_FILESTORAGE_SOURCE_LT_customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_LT_customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_GITHUB_SOURCE_LT_customer_localizacion')]",
				"[concat(variables('factoryId'), '/datasets/DS_FILESTORAGE_ZIP_LT_customer_localizacion')]",
				"[concat(variables('factoryId'), '/datasets/DS_FILESTORAGE_SOURCE_LT_customer_localizacion')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_lt_customer_localizacion')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SEMANAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Clientes": {},
									"ClienteLocalizacion": {},
									"DimClientes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3.load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_dim_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SEMANAL_TRANFORM_dim_clientes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "FLOW_VALIDATION_clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingClientes": {},
									"ValidationClientes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_VALIDATION_cliente_localizacion",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_cliente_localizacion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingClienteLocalizacion": {},
									"ValidationClienteLocalizacion": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_clientes_y_localizacion",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_VALIDATION_clientes",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "FLOW_VALIDATION_cliente_localizacion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_clientes_y_localizacion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Customer": {},
									"CustomerLocalizacion": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_clientes')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_cliente_localizacion')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_clientes_y_localizacion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SEMANAL_TRANSFORM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_SEMANAL_TRANFORM_dim_clientes",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SEMANAL_TRANFORM_dim_clientes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_SEMANAL_TRANFORM_dim_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRIMESTRAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_TRIMESTRAL_EXTRACT",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRIMESTRAL_EXTRACT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_TRIMESTRAL_TRANSFORM",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_TRIMESTRAL_EXTRACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRIMESTRAL_TRANSFORM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_TRIMESTRAL_LOAD",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_TRIMESTRAL_TRANSFORM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRIMESTRAL_LOAD",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-27T12:01:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TRIMESTRAL_EXTRACT')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRIMESTRAL_TRANSFORM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRIMESTRAL_LOAD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRIMESTRAL_EXTRACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "geografia a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "lt_geografia.json"
							},
							{
								"name": "Destination",
								"value": "staging.lt_geografia"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.lt_geografia",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Pais']"
										},
										"sink": {
											"name": "Pais",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Estado']"
										},
										"sink": {
											"name": "Estado",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Ciudad']"
										},
										"sink": {
											"name": "Ciudad",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GITHUB_SOURCE_lt_geografia",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_lt_geografia",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "modo_envio a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "tb_modo_envio.xml"
							},
							{
								"name": "Destination",
								"value": "staging.tb_modo_envio"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.tb_modo_envio",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['@id_modo']"
										},
										"sink": {
											"name": "id_modo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['@Descripcion']"
										},
										"sink": {
											"name": "Descripcion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['@Tipo_x0020_ID']"
										},
										"sink": {
											"name": "Tipo_x0020_ID",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Data']['table_maestria.tb_modo_envio']['maestria.tb_modo_envio']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GITHUB_SOURCE_tb_modo_envio",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_tb_modo_envio",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tipo_envio a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "tb_tipo_envio.xml"
							},
							{
								"name": "Destination",
								"value": "staging.tb_tipo_envio"
							}
						],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": true,
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.tb_tipo_envio",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['@id_tipo']"
										},
										"sink": {
											"name": "id_tipo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['@Descripción']"
										},
										"sink": {
											"name": "Descripcion",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Data']['table_maestria.tb_tipo_envio']['maestria.tb_tipo_envio']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GITHUB_SOURCE_tb_tipo_envio",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_tb_tipo_envio",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "regiones a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Regiones.txt"
							},
							{
								"name": "Destination",
								"value": "staging.Regiones"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.Regiones",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Region ID",
											"type": "String"
										},
										"sink": {
											"name": "Region ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Region Desc",
											"type": "String"
										},
										"sink": {
											"name": "Region Desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Detalle region",
											"type": "String"
										},
										"sink": {
											"name": "Detalle region",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_GITHUB_SOURCE_Regiones",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_Regiones",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "fechas a STAGING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "source-utilities//fechas.csv"
							},
							{
								"name": "Destination",
								"value": "staging.fechas"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table staging.fechas",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
										"type": "LinkedServiceReference"
									},
									"path": "errors"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_fecha",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id_fecha",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "num_anio",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "num_anio",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "num_trimestre",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "num_trimestre",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "num_mes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "num_mes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "num_dia",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "num_dia",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_FILESTORAGE_SOURCE_fechas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_STAGING_fechas",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1.extract"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_GITHUB_SOURCE_lt_geografia')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_lt_geografia')]",
				"[concat(variables('factoryId'), '/datasets/DS_GITHUB_SOURCE_tb_modo_envio')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_tb_modo_envio')]",
				"[concat(variables('factoryId'), '/datasets/DS_GITHUB_SOURCE_tb_tipo_envio')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_tb_tipo_envio')]",
				"[concat(variables('factoryId'), '/datasets/DS_GITHUB_SOURCE_Regiones')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_Regiones')]",
				"[concat(variables('factoryId'), '/datasets/DS_FILESTORAGE_SOURCE_fechas')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_fechas')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRIMESTRAL_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_modos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_modos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ModosEnvio": {},
									"TiposEnvio": {},
									"DimModosEnvio": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_LOAD_dim_fechas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_fechas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Fechas": {},
									"DimFechas": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_LOAD_dim_regiones",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_regiones",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Regiones": {},
									"DimRegiones": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3.load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_dim_modos_envio')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_dim_fechas')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_dim_regiones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRIMESTRAL_TRANFORM_dim_fechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "FLOW_VALIDATION_fechas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_fechas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingFechas": {},
									"ValidationFechas": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_fechas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRIMESTRAL_TRANFORM_dim_regiones')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "FLOW_VALIDATION_regiones",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_regiones",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingRegiones": {},
									"ValidationRegiones": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_regiones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRIMESTRAL_TRANSFORM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_TRIMESTRAL_TRANSFORM_dim_modos_envio",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRIMESTRAL_TRANSFORM_dim_modos_envio",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_TRIMESTRAL_TRANFORM_dim_fechas",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRIMESTRAL_TRANFORM_dim_fechas",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_TRIMESTRAL_TRANFORM_dim_regiones",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_TRIMESTRAL_TRANFORM_dim_regiones",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TRIMESTRAL_TRANSFORM_dim_modos_envio')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRIMESTRAL_TRANFORM_dim_fechas')]",
				"[concat(variables('factoryId'), '/pipelines/PL_TRIMESTRAL_TRANFORM_dim_regiones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRIMESTRAL_TRANSFORM_dim_modos_envio')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_modos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_modos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingModosEnvio": {},
									"ValidationModosEnvio": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_VALIDATION_tipos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_tipos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingTiposEnvio": {},
									"ValidationTiposEnvio": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FLOW_huerfanos_modos_envio_y_tipos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FLOW_VALIDATION_modos_envio",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "FLOW_VALIDATION_tipos_envio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_modos_envio_y_tipos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ModosEnvio": {},
									"TiposEnvio": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2.transform/preprocessing"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T12:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_modos_envio')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_tipos_envio')]",
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_modos_envio_y_tipos_envio')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_LOAD_dim_clientes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Clientes": {},
									"ClienteLocalizacion": {},
									"DimClientes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T07:06:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_dim_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_LOAD_dim_fechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_fechas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_fechas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Fechas": {},
									"DimFechas": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T07:06:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_dim_fechas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_LOAD_dim_modos_envio')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_modos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_modos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ModosEnvio": {},
									"TiposEnvio": {},
									"DimModosEnvio": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T07:06:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_dim_modos_envio')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_LOAD_dim_productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Productos": {},
									"Subcategorias": {},
									"Categorias": {},
									"DimProductos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T07:06:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_dim_productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_LOAD_dim_regiones')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_dim_regiones",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_dim_regiones",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Regiones": {},
									"DimRegiones": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T07:41:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_dim_regiones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_LOAD_fac_compras')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_fac_compras",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_fac_compras",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DetalleOrdenes": {},
									"DetalleEnvios": {},
									"Regiones": {},
									"FacCompras": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T07:34:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_fac_compras')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_LOAD_fac_targets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_LOAD_fac_targets",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_LOAD_fac_targets",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Targets": {},
									"FacTargets": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T07:46:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_LOAD_fac_targets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_ALL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TEST_FLOW_VALIDATION_categorias_producto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_categorias_producto",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_cliente_localizacion",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_cliente_localizacion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_clientes",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_clientes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_detalle_envios",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_detalle_envios",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_detalle_ordenes",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_detalle_ordenes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_fechas",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_fechas",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_modos_envio",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_modos_envio",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_productos",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_productos",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_regiones",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_regiones",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_subcategorias_producto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_subcategorias_producto",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_target_region",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_target_region",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_VALIDATION_tipos_envio",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_VALIDATION_tipos_envio",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_categorias_producto')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_cliente_localizacion')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_clientes')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_detalle_envios')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_detalle_ordenes')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_fechas')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_modos_envio')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_productos')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_regiones')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_subcategorias_producto')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_target_region')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_VALIDATION_tipos_envio')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_categorias_producto')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_categorias_producto",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_categorias_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingCategoriasProducto": {},
									"ValidationCategoriasProducto": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_categorias_producto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_cliente_localizacion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_cliente_localizacion",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_cliente_localizacion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingClienteLocalizacion": {},
									"ValidationClienteLocalizacion": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_cliente_localizacion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_clientes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingClientes": {},
									"ValidationClientes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_detalle_envios')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_detalle_envios",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_detalle_envios",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingDetalleEnvios": {},
									"ValidationDetalleEnvios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_detalle_envios')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_detalle_ordenes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_detalle_ordenes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_detalle_ordenes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingDetalleOrdenes": {},
									"ValidationDetalleOrdenes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_detalle_ordenes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_fechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_fechas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_fechas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingFechas": {},
									"ValidationFechas": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_fechas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_modos_envio')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_modos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_modos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingModosEnvio": {},
									"ValidationModosEnvio": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_modos_envio')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingProductos": {},
									"ValidationProductos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_regiones')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_regiones",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_regiones",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingRegiones": {},
									"ValidationRegiones": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_regiones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_subcategorias_producto')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_subcategorias_producto",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_subcategorias_producto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingSubcategoriasProducto": {},
									"ValidationSubcategoriasProducto": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_subcategorias_producto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_target_region')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_target_region",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_target_region",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingTargetRegion": {},
									"ValidationTargetRegionn": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_target_region')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_VALIDATION_tipos_envio')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_VALIDATION_tipos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_VALIDATION_tipos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StagingTiposEnvio": {},
									"ValidationTiposEnvio": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T01:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_VALIDATION_tipos_envio')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_huerfanos_ALL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TEST_FLOW_huerfanos_categorias_producto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_huerfanos_categorias_producto",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_huerfanos_modos_envio",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_huerfanos_modos_envio",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_huerfanos_productos",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_huerfanos_productos",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/huerfanos"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T02:06:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_huerfanos_categorias_producto')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_huerfanos_modos_envio')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_huerfanos_productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_huerfanos_categorias_producto')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_huerfanos_categorias_producto",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_categorias_y_subcategorias",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Categorias": {},
									"Subcategorias": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/huerfanos"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T02:06:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_categorias_y_subcategorias')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_huerfanos_modos_envio')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_huerfanos_modos_envio",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_modos_envio_y_tipos_envio",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ModosEnvio": {},
									"TiposEnvio": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/huerfanos"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T02:06:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_modos_envio_y_tipos_envio')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_FLOW_huerfanos_productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FLOW_huerfanos_productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLOW_huerfanos_productos_y_subcategorias",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Productos": {},
									"Subcategorias": {},
									"CrearPadresFicticios": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/transform/huerfanos"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T02:06:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FLOW_huerfanos_productos_y_subcategorias')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_LOAD_ALL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TEST_FLOW_LOAD_dim_clientes",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_LOAD_dim_clientes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_LOAD_dim_fechas",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_LOAD_dim_fechas",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_LOAD_dim_modos_envio",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_LOAD_dim_modos_envio",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_LOAD_dim_productos",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_LOAD_dim_productos",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_LOAD_dim_regiones",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_LOAD_dim_regiones",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_LOAD_fac_targets",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_LOAD_fac_targets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TEST_FLOW_LOAD_fac_compras",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TEST_FLOW_LOAD_fac_compras",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "tests/load"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-28T07:48:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_LOAD_dim_clientes')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_LOAD_dim_fechas')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_LOAD_dim_modos_envio')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_LOAD_dim_productos')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_LOAD_dim_regiones')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_LOAD_fac_targets')]",
				"[concat(variables('factoryId'), '/pipelines/TEST_FLOW_LOAD_fac_compras')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FILESTORAGE_SOURCE_LT_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LT_customer.zip",
						"folderPath": "github",
						"container": "source"
					},
					"columnDelimiter": ";",
					"compressionCodec": "ZipDeflate",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Cliente ID",
						"type": "String"
					},
					{
						"name": "Nombre",
						"type": "String"
					},
					{
						"name": "Apellido",
						"type": "String"
					},
					{
						"name": "Segmento",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FILESTORAGE_SOURCE_LT_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "lt_customer_localizacion.zip",
						"folderPath": "github",
						"container": "source"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "ZipDeflate",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Cliente ID",
						"type": "String"
					},
					{
						"name": "Pais",
						"type": "String"
					},
					{
						"name": "Ciudad",
						"type": "String"
					},
					{
						"name": "Estado",
						"type": "String"
					},
					{
						"name": "Codigo Postal",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FILESTORAGE_SOURCE_fechas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "fechas.csv",
						"container": "source"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id_fecha",
						"type": "String"
					},
					{
						"name": "num_anio",
						"type": "String"
					},
					{
						"name": "num_trimestre",
						"type": "String"
					},
					{
						"name": "num_mes",
						"type": "String"
					},
					{
						"name": "num_dia",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FILESTORAGE_ZIP_LT_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LT_customer.zip",
						"folderPath": "github",
						"container": "source"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FILESTORAGE_ZIP_LT_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "lt_customer_localizacion",
						"folderPath": "github",
						"container": "source"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_LT_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_zip_customer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_zip_customer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_LT_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_zip_customer_localizacion",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_zip_customer_localizacion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_LT_productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "LT_productos.csv"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_LT_productos_categoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "LT_productos_categoria.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_LT_productos_sub_categoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "LT_productos_sub_categoria.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_Regiones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "Regiones.txt"
					},
					"columnDelimiter": "\t",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Region ID",
						"type": "String"
					},
					{
						"name": "Region Desc",
						"type": "String"
					},
					{
						"name": "Detalle region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_db_target_region')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "db_target_region.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_lt_geografia')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "lt_geografia.json"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_tb_modo_envio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "tb_modo_envio.xml"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GITHUB_SOURCE_tb_tipo_envio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_GITHUB_SOURCE_raw_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "tb_tipo_envio.xml"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_GITHUB_SOURCE_raw_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DW_dim_clientes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4.dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_cliente",
						"type": "int",
						"precision": 10
					},
					{
						"name": "desc_nombres",
						"type": "nvarchar"
					},
					{
						"name": "desc_apellidos",
						"type": "nvarchar"
					},
					{
						"name": "desc_segmento",
						"type": "nvarchar"
					},
					{
						"name": "desc_pais",
						"type": "nvarchar"
					},
					{
						"name": "desc_ciudad",
						"type": "nvarchar"
					},
					{
						"name": "desc_estado",
						"type": "nvarchar"
					},
					{
						"name": "num_codigo_postal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_region",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "fec_modificacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_clientes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DW_dim_fechas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4.dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_fecha",
						"type": "date"
					},
					{
						"name": "num_anio",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "num_trimestre",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "num_mes",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "num_dia",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "fec_modificacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_fechas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DW_dim_modos_envio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4.dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_modo_envio",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "desc_modo_envio",
						"type": "nvarchar"
					},
					{
						"name": "id_tipo_envio",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "desc_tipo_envio",
						"type": "nvarchar"
					},
					{
						"name": "fec_modificacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_modos_envio"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DW_dim_productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4.dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_producto",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "desc_referencia",
						"type": "nvarchar"
					},
					{
						"name": "id_subcategoria",
						"type": "nvarchar"
					},
					{
						"name": "desc_producto",
						"type": "nvarchar"
					},
					{
						"name": "desc_subcategoria",
						"type": "nvarchar"
					},
					{
						"name": "id_categoria",
						"type": "nvarchar"
					},
					{
						"name": "desc_categoria",
						"type": "nvarchar"
					},
					{
						"name": "fec_modificacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_productos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DW_dim_regiones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4.dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_region",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "desc_region",
						"type": "nvarchar"
					},
					{
						"name": "desc_detalle",
						"type": "nvarchar"
					},
					{
						"name": "fec_modificacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_regiones"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DW_fac_compras')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4.dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_compra",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "num_detalle_orden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "num_orden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_producto",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "id_modo_envio",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "num_cantidad",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "imp_subtotal",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "imp_linea_total",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "imp_descuento",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "imp_precio_unitario",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "imp_precio_total",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "imp_ganancia",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "imp_ganancia_neta",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "imp_impuestos",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "imp_valor_logistica",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "imp_valor_provision_covid",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "fec_orden",
						"type": "date"
					},
					{
						"name": "fec_envio",
						"type": "date"
					},
					{
						"name": "id_cliente",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id_region",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "fec_modificacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "fac_compras"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DW_fac_targets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4.dw"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_fecha",
						"type": "date"
					},
					{
						"name": "id_region",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "imp_valor",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "fec_modificacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "fac_targets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_SOURCE_LT_detalle_ordenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Detalle Orden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Numero Orden",
						"type": "varchar"
					},
					{
						"name": "Producto ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Linea Total",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Cantidad",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Descuento",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Precio Unitario",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Ganancia",
						"type": "float",
						"precision": 15
					},
					{
						"name": "region_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "maestria",
					"table": "LT_detalle_ordenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_SOURCE_tb_detalle_envios')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_SOURCE_banmarket",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1.source"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "num_order",
						"type": "varchar"
					},
					{
						"name": "fec_orden",
						"type": "date"
					},
					{
						"name": "fec_envio",
						"type": "date"
					},
					{
						"name": "modo_envio",
						"type": "varchar"
					},
					{
						"name": "cliente_id",
						"type": "varchar"
					},
					{
						"name": "imp_subtotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "region_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "maestria",
					"table": "tb_detalle_envios"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_LT_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Cliente ID",
						"type": "nvarchar"
					},
					{
						"name": "Nombre",
						"type": "nvarchar"
					},
					{
						"name": "Apellido",
						"type": "nvarchar"
					},
					{
						"name": "Segmento",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "LT_customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_LT_detalle_ordenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Detalle Orden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Numero Orden",
						"type": "nvarchar"
					},
					{
						"name": "Producto ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Linea Total",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Cantidad",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Descuento",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Precio Unitario",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Ganancia",
						"type": "float",
						"precision": 15
					},
					{
						"name": "region_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "LT_detalle_ordenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_LT_productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Producto ID",
						"type": "nvarchar"
					},
					{
						"name": "Numero Producto",
						"type": "nvarchar"
					},
					{
						"name": "Producto Sub Categoria ID",
						"type": "nvarchar"
					},
					{
						"name": "Nombre Producto",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "LT_productos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_LT_productos_categoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Categoria Producto ID",
						"type": "nvarchar"
					},
					{
						"name": "Descripcion Categoria",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "LT_productos_categoria"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_LT_productos_sub_categoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Subcategoria Producto ID",
						"type": "nvarchar"
					},
					{
						"name": "Categoria Producto ID",
						"type": "nvarchar"
					},
					{
						"name": "Descripcion Subcategoria",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "LT_productos_sub_categoria"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_Regiones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Region ID",
						"type": "nvarchar"
					},
					{
						"name": "Region Desc",
						"type": "nvarchar"
					},
					{
						"name": "Detalle region",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "Regiones"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_db_target_region')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "fecha",
						"type": "nvarchar"
					},
					{
						"name": "anio",
						"type": "nvarchar"
					},
					{
						"name": "mes",
						"type": "nvarchar"
					},
					{
						"name": "Region ID",
						"type": "nvarchar"
					},
					{
						"name": "Target",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "db_target_region"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_fechas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_fecha",
						"type": "date"
					},
					{
						"name": "num_anio",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "num_trimestre",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "num_mes",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "num_dia",
						"type": "tinyint",
						"precision": 3
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "fechas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_lt_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Cliente ID",
						"type": "nvarchar"
					},
					{
						"name": "Pais",
						"type": "nvarchar"
					},
					{
						"name": "Ciudad",
						"type": "nvarchar"
					},
					{
						"name": "Estado",
						"type": "nvarchar"
					},
					{
						"name": "Codigo Postal",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "lt_customer_localizacion"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_lt_geografia')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Pais",
						"type": "nvarchar"
					},
					{
						"name": "Estado",
						"type": "nvarchar"
					},
					{
						"name": "Ciudad",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "lt_geografia"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_tb_detalle_envios')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "num_order",
						"type": "nvarchar"
					},
					{
						"name": "fec_orden",
						"type": "date"
					},
					{
						"name": "fec_envio",
						"type": "date"
					},
					{
						"name": "modo_envio",
						"type": "nvarchar"
					},
					{
						"name": "cliente_id",
						"type": "nvarchar"
					},
					{
						"name": "imp_subtotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "region_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "tb_detalle_envios"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_tb_modo_envio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_modo",
						"type": "nvarchar"
					},
					{
						"name": "Descripcion",
						"type": "nvarchar"
					},
					{
						"name": "Tipo_x0020_ID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "tb_modo_envio"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_STAGING_tb_tipo_envio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2.staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_tipo",
						"type": "nvarchar"
					},
					{
						"name": "Descripcion",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "tb_tipo_envio"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_LT_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Cliente ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nombre",
						"type": "nvarchar"
					},
					{
						"name": "Apellido",
						"type": "nvarchar"
					},
					{
						"name": "Segmento",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "LT_customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_LT_detalle_ordenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Detalle Orden",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Numero Orden",
						"type": "nvarchar"
					},
					{
						"name": "Producto ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Linea Total",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Cantidad",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Descuento",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Precio Unitario",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Ganancia",
						"type": "float",
						"precision": 15
					},
					{
						"name": "region_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "LT_detalle_ordenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_LT_productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Producto ID",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Numero Producto",
						"type": "nvarchar"
					},
					{
						"name": "Producto Sub Categoria ID",
						"type": "nvarchar"
					},
					{
						"name": "Nombre Producto",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "LT_productos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_LT_productos_categoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Categoria Producto ID",
						"type": "nvarchar"
					},
					{
						"name": "Descripcion Categoria",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "LT_productos_categoria"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_LT_productos_sub_categoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Subcategoria Producto ID",
						"type": "nvarchar"
					},
					{
						"name": "Categoria Producto ID",
						"type": "nvarchar"
					},
					{
						"name": "Descripcion Subcategoria",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "LT_productos_sub_categoria"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_Regiones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Region ID",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Region Desc",
						"type": "nvarchar"
					},
					{
						"name": "Detalle region",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "Regiones"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_db_target_region')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "fecha",
						"type": "date"
					},
					{
						"name": "anio",
						"type": "int",
						"precision": 10
					},
					{
						"name": "mes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Region ID",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Target",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "db_target_region"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_fechas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_fecha",
						"type": "date"
					},
					{
						"name": "num_anio",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "num_trimestre",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "num_mes",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "num_dia",
						"type": "tinyint",
						"precision": 3
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "fechas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_lt_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Cliente ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Pais",
						"type": "nvarchar"
					},
					{
						"name": "Ciudad",
						"type": "nvarchar"
					},
					{
						"name": "Estado",
						"type": "nvarchar"
					},
					{
						"name": "Codigo Postal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Region",
						"type": "tinyint",
						"precision": 3
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "lt_customer_localizacion"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_lt_geografia')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Pais",
						"type": "nvarchar"
					},
					{
						"name": "Estado",
						"type": "nvarchar"
					},
					{
						"name": "Ciudad",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "lt_geografia"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_tb_detalle_envios')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "num_order",
						"type": "nvarchar"
					},
					{
						"name": "fec_orden",
						"type": "date"
					},
					{
						"name": "fec_envio",
						"type": "date"
					},
					{
						"name": "modo_envio",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "cliente_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "imp_subtotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "region_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "tb_detalle_envios"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_tb_modo_envio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_modo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Descripcion",
						"type": "nvarchar"
					},
					{
						"name": "Tipo_x0020_ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "tb_modo_envio"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_VALIDATION_tb_tipo_envio')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_TARGET_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3.validation"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id_tipo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Descripcion",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "validation",
					"table": "tb_tipo_envio"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_TARGET_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FILESTORAGE_SOURCE_banmarket')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_FILESTORAGE_SOURCE_banmarket_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_GITHUB_SOURCE_raw_banmarket')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_GITHUB_SOURCE_raw_banmarket_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_GITHUB_SOURCE_zip_customer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_GITHUB_SOURCE_zip_customer_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_GITHUB_SOURCE_zip_customer_localizacion')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_GITHUB_SOURCE_zip_customer_localizacion_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_SOURCE_banmarket')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_SOURCE_banmarket_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_TARGET_dw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_TARGET_dw_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRIGGER_DIARIO')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_DIARIO",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-05-31T00:00:00",
						"timeZone": "SA Pacific Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DIARIO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRIGGER_MENSUAL')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_MENSUAL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-05-31T00:00:00",
						"timeZone": "SA Pacific Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							],
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_MENSUAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRIGGER_SEMANAL')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_SEMANAL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-05-31T00:00:00",
						"timeZone": "SA Pacific Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_SEMANAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRIGGER_TRIMESTRAL')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_TRIMESTRAL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 3,
						"startTime": "2022-05-31T00:00:00",
						"timeZone": "SA Pacific Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							],
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_TRIMESTRAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_LOAD_dim_clientes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3.load"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_customer",
								"type": "DatasetReference"
							},
							"name": "Clientes"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_lt_customer_localizacion",
								"type": "DatasetReference"
							},
							"name": "ClienteLocalizacion"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_DW_dim_clientes",
								"type": "DatasetReference"
							},
							"name": "DimClientes",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "JoinClienteLocalizacion"
						},
						{
							"name": "Auditoria"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Cliente ID} as integer,",
						"          Nombre as string,",
						"          Apellido as string,",
						"          Segmento as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Clientes",
						"source(output(",
						"          {Cliente ID} as integer,",
						"          Pais as string,",
						"          Ciudad as string,",
						"          Estado as string,",
						"          {Codigo Postal} as integer,",
						"          Region as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ClienteLocalizacion",
						"Clientes, ClienteLocalizacion join(Clientes@{Cliente ID} == ClienteLocalizacion@{Cliente ID},",
						"     joinType:'left',",
						"     broadcast: 'auto')~> JoinClienteLocalizacion",
						"JoinClienteLocalizacion derive(fec_modificacion = fromUTC(currentUTC(), 'America/Bogota')) ~> Auditoria",
						"Auditoria sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_cliente as integer,",
						"          desc_nombres as string,",
						"          desc_apellidos as string,",
						"          desc_segmento as string,",
						"          desc_pais as string,",
						"          desc_ciudad as string,",
						"          desc_estado as string,",
						"          num_codigo_postal as integer,",
						"          id_region as integer,",
						"          fec_modificacion as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'allErrors',",
						"     outputRejectedData: true,",
						"     rejectedData_container: 'errors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          id_cliente = Clientes@{Cliente ID},",
						"          desc_nombres = Nombre,",
						"          desc_apellidos = Apellido,",
						"          desc_segmento = Segmento,",
						"          desc_pais = Pais,",
						"          desc_ciudad = Ciudad,",
						"          desc_estado = Estado,",
						"          num_codigo_postal = {Codigo Postal},",
						"          id_region = Region,",
						"          fec_modificacion",
						"     )) ~> DimClientes"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_lt_customer_localizacion')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DW_dim_clientes')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_LOAD_dim_fechas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3.load"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_fechas",
								"type": "DatasetReference"
							},
							"name": "Fechas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_DW_dim_fechas",
								"type": "DatasetReference"
							},
							"name": "DimFechas",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "Auditoria"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_fecha as date,",
						"          num_anio as integer,",
						"          num_trimestre as integer,",
						"          num_mes as integer,",
						"          num_dia as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Fechas",
						"Fechas derive(fec_modificacion = fromUTC(currentUTC(), 'America/Bogota')) ~> Auditoria",
						"Auditoria sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_fecha as date,",
						"          num_anio as integer,",
						"          num_trimestre as integer,",
						"          num_mes as integer,",
						"          num_dia as integer,",
						"          fec_modificacion as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'allErrors',",
						"     outputRejectedData: true,",
						"     rejectedData_container: 'errors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          id_fecha,",
						"          num_anio,",
						"          num_trimestre,",
						"          num_mes,",
						"          num_dia,",
						"          fec_modificacion",
						"     )) ~> DimFechas"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_fechas')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DW_dim_fechas')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_LOAD_dim_modos_envio')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3.load"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_modo_envio",
								"type": "DatasetReference"
							},
							"name": "ModosEnvio"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_tipo_envio",
								"type": "DatasetReference"
							},
							"name": "TiposEnvio"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_DW_dim_modos_envio",
								"type": "DatasetReference"
							},
							"name": "DimModosEnvio",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "JoinTiposEnvio"
						},
						{
							"name": "Auditoria"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_modo as integer,",
						"          Descripcion as string,",
						"          Tipo_x0020_ID as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ModosEnvio",
						"source(output(",
						"          id_tipo as integer,",
						"          Descripcion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> TiposEnvio",
						"ModosEnvio, TiposEnvio join(Tipo_x0020_ID == id_tipo,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> JoinTiposEnvio",
						"JoinTiposEnvio derive(fec_modificacion = fromUTC(currentUTC(), 'America/Bogota')) ~> Auditoria",
						"Auditoria sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_modo_envio as integer,",
						"          desc_modo_envio as string,",
						"          id_tipo_envio as integer,",
						"          desc_tipo_envio as string,",
						"          fec_modificacion as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     outputRejectedData: true,",
						"     rejectedData_container: 'errors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          id_modo_envio = id_modo,",
						"          desc_modo_envio = ModosEnvio@Descripcion,",
						"          id_tipo_envio = id_tipo,",
						"          desc_tipo_envio = TiposEnvio@Descripcion,",
						"          fec_modificacion",
						"     )) ~> DimModosEnvio"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_modo_envio')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_tipo_envio')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DW_dim_modos_envio')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_LOAD_dim_productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3.load"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos",
								"type": "DatasetReference"
							},
							"name": "Productos"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "Subcategorias"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_categoria",
								"type": "DatasetReference"
							},
							"name": "Categorias"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_DW_dim_productos",
								"type": "DatasetReference"
							},
							"name": "DimProductos",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "JoinSubcategorias"
						},
						{
							"name": "JoinCategorias"
						},
						{
							"name": "Auditoria"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Producto ID} as integer,",
						"          {Numero Producto} as string,",
						"          {Producto Sub Categoria ID} as string,",
						"          {Nombre Producto} as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Productos",
						"source(output(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Subcategorias",
						"source(output(",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Categoria} as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Categorias",
						"Productos, Subcategorias join({Producto Sub Categoria ID} == {Subcategoria Producto ID},",
						"     joinType:'left',",
						"     broadcast: 'auto')~> JoinSubcategorias",
						"JoinSubcategorias, Categorias join(Subcategorias@{Categoria Producto ID} == Categorias@{Categoria Producto ID},",
						"     joinType:'left',",
						"     broadcast: 'auto')~> JoinCategorias",
						"JoinCategorias derive(fec_modificacion = fromUTC(currentUTC(), 'America/Bogota')) ~> Auditoria",
						"Auditoria sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          id_producto as integer,",
						"          desc_referencia as string,",
						"          id_subcategoria as string,",
						"          desc_producto as string,",
						"          desc_subcategoria as string,",
						"          id_categoria as string,",
						"          desc_categoria as string,",
						"          fec_modificacion as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     outputRejectedData: true,",
						"     rejectedData_container: 'errors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          id_producto = {Producto ID},",
						"          desc_referencia = {Numero Producto},",
						"          id_subcategoria = {Producto Sub Categoria ID},",
						"          desc_producto = {Nombre Producto},",
						"          desc_subcategoria = {Descripcion Subcategoria},",
						"          id_categoria = Categorias@{Categoria Producto ID},",
						"          desc_categoria = {Descripcion Categoria},",
						"          fec_modificacion",
						"     )) ~> DimProductos"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos_sub_categoria')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos_categoria')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DW_dim_productos')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_LOAD_dim_regiones')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3.load"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_Regiones",
								"type": "DatasetReference"
							},
							"name": "Regiones"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_DW_dim_regiones",
								"type": "DatasetReference"
							},
							"name": "DimRegiones",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "Auditoria"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Region ID} as integer,",
						"          {Region Desc} as string,",
						"          {Detalle region} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Regiones",
						"Regiones derive(fec_modificacion = fromUTC(currentUTC(), 'America/Bogota')) ~> Auditoria",
						"Auditoria sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_region as integer,",
						"          desc_region as string,",
						"          desc_detalle as string,",
						"          fec_modificacion as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'allErrors',",
						"     outputRejectedData: true,",
						"     rejectedData_container: 'errors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          id_region = {Region ID},",
						"          desc_region = {Region Desc},",
						"          desc_detalle = {Detalle region},",
						"          fec_modificacion",
						"     )) ~> DimRegiones"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_Regiones')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DW_dim_regiones')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_LOAD_fac_compras')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3.load"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_detalle_ordenes",
								"type": "DatasetReference"
							},
							"name": "DetalleOrdenes"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_detalle_envios",
								"type": "DatasetReference"
							},
							"name": "DetalleEnvios"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_DW_dim_regiones",
								"type": "DatasetReference"
							},
							"name": "Regiones"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_DW_fac_compras",
								"type": "DatasetReference"
							},
							"name": "FacCompras",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "JoinDetalleEnvios"
						},
						{
							"name": "JoinRegiones"
						},
						{
							"name": "GenerarIdCompra"
						},
						{
							"name": "SeleccionarColumnas"
						},
						{
							"name": "Auditoria"
						},
						{
							"name": "Metricas"
						},
						{
							"name": "FiltrarInconsistencias"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Detalle Orden} as integer,",
						"          {Numero Orden} as string,",
						"          {Producto ID} as integer,",
						"          {Linea Total} as double,",
						"          Cantidad as integer,",
						"          Descuento as double,",
						"          {Precio Unitario} as double,",
						"          Ganancia as double,",
						"          region_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DetalleOrdenes",
						"source(output(",
						"          num_order as string,",
						"          fec_orden as date,",
						"          fec_envio as date,",
						"          modo_envio as integer,",
						"          cliente_id as integer,",
						"          imp_subtotal as double,",
						"          region_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DetalleEnvios",
						"source(output(",
						"          id_region as integer,",
						"          desc_region as string,",
						"          desc_detalle as string,",
						"          fec_modificacion as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Regiones",
						"DetalleOrdenes, DetalleEnvios join({Numero Orden} == num_order",
						"     && DetalleOrdenes@region_id == DetalleEnvios@region_id,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> JoinDetalleEnvios",
						"JoinDetalleEnvios, Regiones join(DetalleOrdenes@region_id == id_region,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> JoinRegiones",
						"FiltrarInconsistencias keyGenerate(output(id_compra as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> GenerarIdCompra",
						"JoinRegiones select(mapColumn(",
						"          {Detalle Orden},",
						"          {Numero Orden},",
						"          {Producto ID},",
						"          {Linea Total},",
						"          Cantidad,",
						"          Descuento,",
						"          {Precio Unitario},",
						"          Ganancia,",
						"          num_order,",
						"          fec_orden,",
						"          fec_envio,",
						"          modo_envio,",
						"          cliente_id,",
						"          imp_subtotal,",
						"          id_region,",
						"          desc_region,",
						"          desc_detalle",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SeleccionarColumnas",
						"Metricas derive(fec_modificacion = fromUTC(currentUTC(), 'America/Bogota')) ~> Auditoria",
						"GenerarIdCompra derive(precio_total = {Precio Unitario} * Cantidad,",
						"          ganancia_neta = Ganancia - (({Precio Unitario} * 12 / 100) * Cantidad) - (({Precio Unitario} * 3 / 100) * Cantidad),",
						"          impuestos = Ganancia * 19 / 100,",
						"          valor_logistica = ({Precio Unitario} * 12 / 100) * Cantidad,",
						"          valor_provision_covid = ({Precio Unitario} * 3 / 100) * Cantidad) ~> Metricas",
						"SeleccionarColumnas filter((fec_orden < fec_envio) &&",
						"(Cantidad > 0)) ~> FiltrarInconsistencias",
						"Auditoria sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_compra as long,",
						"          num_detalle_orden as integer,",
						"          num_orden as integer,",
						"          id_producto as integer,",
						"          id_modo_envio as integer,",
						"          num_cantidad as integer,",
						"          imp_subtotal as decimal(12,2),",
						"          imp_linea_total as decimal(12,2),",
						"          imp_descuento as decimal(12,2),",
						"          imp_precio_unitario as decimal(12,2),",
						"          imp_precio_total as decimal(12,2),",
						"          imp_ganancia as decimal(12,2),",
						"          imp_ganancia_neta as decimal(12,2),",
						"          imp_impuestos as decimal(12,2),",
						"          imp_valor_logistica as decimal(12,2),",
						"          imp_valor_provision_covid as decimal(12,2),",
						"          fec_orden as date,",
						"          fec_envio as date,",
						"          id_cliente as integer,",
						"          id_region as integer,",
						"          fec_modificacion as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'allErrors',",
						"     outputRejectedData: true,",
						"     rejectedData_container: 'errors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          id_compra,",
						"          num_detalle_orden = {Detalle Orden},",
						"          num_orden = {Numero Orden},",
						"          id_producto = {Producto ID},",
						"          id_modo_envio = modo_envio,",
						"          num_cantidad = Cantidad,",
						"          imp_subtotal,",
						"          imp_linea_total = {Linea Total},",
						"          imp_descuento = Descuento,",
						"          imp_precio_unitario = {Precio Unitario},",
						"          imp_precio_total = precio_total,",
						"          imp_ganancia = Ganancia,",
						"          imp_ganancia_neta = ganancia_neta,",
						"          imp_impuestos = impuestos,",
						"          imp_valor_logistica = valor_logistica,",
						"          imp_valor_provision_covid = valor_provision_covid,",
						"          fec_orden,",
						"          fec_envio,",
						"          id_cliente = cliente_id,",
						"          id_region,",
						"          fec_modificacion",
						"     )) ~> FacCompras"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_detalle_ordenes')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_detalle_envios')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DW_dim_regiones')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DW_fac_compras')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_LOAD_fac_targets')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3.load"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_db_target_region",
								"type": "DatasetReference"
							},
							"name": "Targets"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_DW_fac_targets",
								"type": "DatasetReference"
							},
							"name": "FacTargets",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "Auditoria"
						}
					],
					"scriptLines": [
						"source(output(",
						"          fecha as string,",
						"          anio as string,",
						"          mes as string,",
						"          {Region ID} as integer,",
						"          Target as decimal(12,2)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Targets",
						"Targets derive(fec_modificacion = fromUTC(currentUTC(), 'America/Bogota')) ~> Auditoria",
						"Auditoria sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_fecha as date,",
						"          id_region as integer,",
						"          imp_valor as decimal(12,2),",
						"          fec_modificacion as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'allErrors',",
						"     outputRejectedData: true,",
						"     rejectedData_container: 'errors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          id_fecha = fecha,",
						"          id_region = {Region ID},",
						"          imp_valor = Target,",
						"          fec_modificacion",
						"     )) ~> FacTargets"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_db_target_region')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DW_fac_targets')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_categorias_producto')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_LT_productos_categoria",
								"type": "DatasetReference"
							},
							"name": "StagingCategoriasProducto"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_categoria",
								"type": "DatasetReference"
							},
							"name": "ValidationCategoriasProducto",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						},
						{
							"name": "ConversionColumnas"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Categoria} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingCategoriasProducto",
						"ConversionColumnas filter({Categoria Producto ID} != '') ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy({Categoria Producto ID}),",
						"     {Descripcion Categoria} = first({Descripcion Categoria})) ~> RemoverDuplicados",
						"StagingCategoriasProducto derive({Categoria Producto ID} = case ( \r",
						"    (isNull({Categoria Producto ID}) || (upper({Categoria Producto ID}) == 'NULL')), '', trim({Categoria Producto ID})\r",
						")) ~> ConversionColumnas",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Categoria} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Categoria Producto ID},",
						"          {Descripcion Categoria}",
						"     )) ~> ValidationCategoriasProducto"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_LT_productos_categoria')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos_categoria')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_cliente_localizacion')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_lt_customer_localizacion",
								"type": "DatasetReference"
							},
							"name": "StagingClienteLocalizacion"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_lt_customer_localizacion",
								"type": "DatasetReference"
							},
							"name": "ValidationClienteLocalizacion",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ConversionColumnas"
						},
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Cliente ID} as string,",
						"          Pais as string,",
						"          Ciudad as string,",
						"          Estado as string,",
						"          {Codigo Postal} as string,",
						"          Region as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingClienteLocalizacion",
						"StagingClienteLocalizacion derive({Cliente ID} = toInteger(\r",
						"    case ( \r",
						"        (isNull({Cliente ID}) || (upper({Cliente ID}) == 'NULL')), '', trim({Cliente ID})\r",
						"    )\r",
						"),",
						"          {Codigo Postal} = toInteger(\r",
						"    case ( \r",
						"        (isNull({Codigo Postal}) || (upper({Codigo Postal}) == 'NULL')), '', trim({Codigo Postal})\r",
						"    )\r",
						"),",
						"          Region = toInteger(\r",
						"    case ( \r",
						"        (isNull(Region) || (upper(Region) == 'NULL')), '', trim(Region)\r",
						"    )\r",
						")) ~> ConversionColumnas",
						"ConversionColumnas filter(and(not(isNull({Cliente ID})), {Cliente ID} > 0) &&\r",
						"and(not(isNull({Codigo Postal})), {Codigo Postal} > 0) &&\r",
						"and(not(isNull(Region)), Region > 0)) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy({Cliente ID}),",
						"     Pais = first(Pais),",
						"          Ciudad = first(Ciudad),",
						"          Estado = first(Estado),",
						"          {Codigo Postal} = first({Codigo Postal}),",
						"          Region = first(Region)) ~> RemoverDuplicados",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Cliente ID} as integer,",
						"          Pais as string,",
						"          Ciudad as string,",
						"          Estado as string,",
						"          {Codigo Postal} as integer,",
						"          Region as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Cliente ID},",
						"          Pais,",
						"          Ciudad,",
						"          Estado,",
						"          {Codigo Postal},",
						"          Region",
						"     )) ~> ValidationClienteLocalizacion"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_lt_customer_localizacion')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_lt_customer_localizacion')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_clientes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_LT_customer",
								"type": "DatasetReference"
							},
							"name": "StagingClientes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_customer",
								"type": "DatasetReference"
							},
							"name": "ValidationClientes",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ConversionColumnas"
						},
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Cliente ID} as string,",
						"          Nombre as string,",
						"          Apellido as string,",
						"          Segmento as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingClientes",
						"StagingClientes derive({Cliente ID} = toInteger(\r",
						"    case ( \r",
						"\r",
						"        (isNull({Cliente ID}) || (upper({Cliente ID}) == 'NULL')), '',\r",
						"        and(not(isNull({Cliente ID}) || (upper({Cliente ID}) == 'NULL')), like({Cliente ID}, '%-%')), split({Cliente ID}, '-')[2],\r",
						"        trim({Cliente ID})\r",
						"    )\r",
						")) ~> ConversionColumnas",
						"ConversionColumnas filter(and(not(isNull({Cliente ID})), {Cliente ID} > 0)) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy({Cliente ID}),",
						"     Nombre = first({Nombre}),",
						"          Apellido = first({Apellido}),",
						"          Segmento = first({Segmento})) ~> RemoverDuplicados",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Cliente ID} as integer,",
						"          Nombre as string,",
						"          Apellido as string,",
						"          Segmento as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Cliente ID},",
						"          Nombre,",
						"          Apellido,",
						"          Segmento",
						"     )) ~> ValidationClientes"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_LT_customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_customer')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_detalle_envios')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_tb_detalle_envios",
								"type": "DatasetReference"
							},
							"name": "StagingDetalleEnvios"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_detalle_envios",
								"type": "DatasetReference"
							},
							"name": "ValidationDetalleEnvios",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						},
						{
							"name": "ConversionColumnas"
						}
					],
					"scriptLines": [
						"source(output(",
						"          num_order as string,",
						"          fec_orden as date,",
						"          fec_envio as date,",
						"          modo_envio as string,",
						"          cliente_id as string,",
						"          imp_subtotal as double,",
						"          region_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingDetalleEnvios",
						"ConversionColumnas filter(num_order != '' && not(isNull(modo_envio)) && not(isNull(cliente_id))) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy(num_order,",
						"          fec_orden,",
						"          fec_envio,",
						"          modo_envio,",
						"          cliente_id,",
						"          imp_subtotal,",
						"          region_id),",
						"     t = count(1)) ~> RemoverDuplicados",
						"StagingDetalleEnvios derive(num_order = case ( \r",
						"    (isNull(num_order) || (upper(num_order) == 'NULL')), '', trim(num_order)\r",
						"),",
						"          modo_envio = toInteger(\r",
						"    case ( \r",
						"        (isNull(modo_envio) || (upper(modo_envio) == 'NULL')), '', trim(modo_envio)\r",
						"    )\r",
						"),",
						"          cliente_id = toInteger(\r",
						"     case ( \r",
						"\r",
						"          (isNull(cliente_id) || (upper(cliente_id) == 'NULL')), '',\r",
						"          and(not(isNull(cliente_id) || (upper(cliente_id) == 'NULL')), like(cliente_id, '%-%')), split(cliente_id, '-')[2],\r",
						"          trim(cliente_id)\r",
						"          )\r",
						")) ~> ConversionColumnas",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          num_order as string,",
						"          fec_orden as date,",
						"          fec_envio as date,",
						"          modo_envio as integer,",
						"          cliente_id as integer,",
						"          imp_subtotal as double,",
						"          region_id as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          num_order,",
						"          fec_orden,",
						"          fec_envio,",
						"          modo_envio,",
						"          cliente_id,",
						"          imp_subtotal,",
						"          region_id",
						"     )) ~> ValidationDetalleEnvios"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_tb_detalle_envios')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_detalle_envios')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_detalle_ordenes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_LT_detalle_ordenes",
								"type": "DatasetReference"
							},
							"name": "StagingDetalleOrdenes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_detalle_ordenes",
								"type": "DatasetReference"
							},
							"name": "ValidationDetalleOrdenes",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						},
						{
							"name": "ConversionColumnas"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Detalle Orden} as integer,",
						"          {Numero Orden} as string,",
						"          {Producto ID} as integer,",
						"          {Linea Total} as double,",
						"          Cantidad as integer,",
						"          Descuento as double,",
						"          {Precio Unitario} as double,",
						"          Ganancia as double,",
						"          region_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingDetalleOrdenes",
						"ConversionColumnas filter(and(not(isNull({Detalle Orden})), {Detalle Orden} > 0) && \r",
						"({Numero Orden} != '') && \r",
						"and(not(isNull({Producto ID})), {Producto ID} > 0) && \r",
						"and(not(isNull(region_id)), region_id > 0)) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy({Detalle Orden},",
						"          {Numero Orden},",
						"          {Producto ID},",
						"          {Linea Total},",
						"          Cantidad,",
						"          Descuento,",
						"          {Precio Unitario},",
						"          Ganancia,",
						"          region_id),",
						"     t = count(1)) ~> RemoverDuplicados",
						"StagingDetalleOrdenes derive({Numero Orden} = case ( \r",
						"    (isNull({Numero Orden}) || (upper({Numero Orden}) == 'NULL')), '', trim({Numero Orden})\r",
						")) ~> ConversionColumnas",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Detalle Orden} as integer,",
						"          {Numero Orden} as string,",
						"          {Producto ID} as integer,",
						"          {Linea Total} as double,",
						"          Cantidad as integer,",
						"          Descuento as double,",
						"          {Precio Unitario} as double,",
						"          Ganancia as double,",
						"          region_id as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Detalle Orden},",
						"          {Numero Orden},",
						"          {Producto ID},",
						"          {Linea Total},",
						"          Cantidad,",
						"          Descuento,",
						"          {Precio Unitario},",
						"          Ganancia,",
						"          region_id",
						"     )) ~> ValidationDetalleOrdenes"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_LT_detalle_ordenes')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_detalle_ordenes')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_fechas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_fechas",
								"type": "DatasetReference"
							},
							"name": "StagingFechas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_fechas",
								"type": "DatasetReference"
							},
							"name": "ValidationFechas",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ConversionColumnas"
						},
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_fecha as string,",
						"          num_anio as string,",
						"          num_trimestre as string,",
						"          num_mes as string,",
						"          num_dia as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingFechas",
						"StagingFechas derive(id_fecha = toDate(id_fecha, 'yyyy-MM-dd'),",
						"          num_anio = toInteger(num_anio),",
						"          num_trimestre = toInteger(num_trimestre),",
						"          num_mes = toInteger(num_mes),",
						"          num_dia = toInteger(num_dia)) ~> ConversionColumnas",
						"ConversionColumnas filter(not(isNull(id_fecha))) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy(id_fecha),",
						"     num_anio = first(num_anio),",
						"          num_trimestre = first(num_trimestre),",
						"          num_mes = first(num_mes),",
						"          num_dia = first(num_dia)) ~> RemoverDuplicados",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_fecha as date,",
						"          num_anio as integer,",
						"          num_trimestre as integer,",
						"          num_mes as integer,",
						"          num_dia as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          id_fecha,",
						"          num_anio,",
						"          num_trimestre,",
						"          num_mes,",
						"          num_dia",
						"     )) ~> ValidationFechas"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_fechas')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_fechas')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_modos_envio')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_tb_modo_envio",
								"type": "DatasetReference"
							},
							"name": "StagingModosEnvio"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_modo_envio",
								"type": "DatasetReference"
							},
							"name": "ValidationModosEnvio",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ConversionColumnas"
						},
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_modo as string,",
						"          Descripcion as string,",
						"          Tipo_x0020_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingModosEnvio",
						"StagingModosEnvio derive(id_modo = toInteger(\r",
						"    case ( \r",
						"        (isNull(id_modo) || (upper(id_modo) == 'NULL')), '', trim(id_modo)\r",
						"    )\r",
						"),",
						"          Tipo_x0020_ID = toInteger(\r",
						"    case ( \r",
						"        (isNull(Tipo_x0020_ID) || (upper(Tipo_x0020_ID) == 'NULL')), '', trim(Tipo_x0020_ID)\r",
						"    )\r",
						")) ~> ConversionColumnas",
						"ConversionColumnas filter(and(not(isNull(id_modo)), id_modo >= 0) &&\r",
						"and(not(isNull(Tipo_x0020_ID)), Tipo_x0020_ID > 0)) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy(id_modo),",
						"     Descripcion = first(Descripcion),",
						"          Tipo_x0020_ID = first(Tipo_x0020_ID)) ~> RemoverDuplicados",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_modo as integer,",
						"          Descripcion as string,",
						"          Tipo_x0020_ID as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          id_modo,",
						"          Descripcion,",
						"          Tipo_x0020_ID",
						"     )) ~> ValidationModosEnvio"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_tb_modo_envio')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_modo_envio')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_LT_productos",
								"type": "DatasetReference"
							},
							"name": "StagingProductos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos",
								"type": "DatasetReference"
							},
							"name": "ValidationProductos",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ConversionColumnas"
						},
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Producto ID} as string,",
						"          {Numero Producto} as string,",
						"          {Producto Sub Categoria ID} as string,",
						"          {Nombre Producto} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingProductos",
						"StagingProductos derive({Producto ID} = toInteger(\r",
						"    case ( \r",
						"        (isNull({Producto ID}) || (upper({Producto ID}) == 'NULL')), '', trim({Producto ID})\r",
						"    )\r",
						")) ~> ConversionColumnas",
						"ConversionColumnas filter(and(not(isNull({Producto ID})), {Producto ID} > 0) &&\r",
						"and(not(isNull({Numero Producto})), (upper({Numero Producto}) != 'NULL'))) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy({Producto ID}),",
						"     {Numero Producto} = first({Numero Producto}),",
						"          {Producto Sub Categoria ID} = first({Producto Sub Categoria ID}),",
						"          {Nombre Producto} = first({Nombre Producto})) ~> RemoverDuplicados",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Producto ID} as integer,",
						"          {Numero Producto} as string,",
						"          {Producto Sub Categoria ID} as string,",
						"          {Nombre Producto} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Producto ID},",
						"          {Numero Producto},",
						"          {Producto Sub Categoria ID},",
						"          {Nombre Producto}",
						"     )) ~> ValidationProductos"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_LT_productos')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_regiones')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_Regiones",
								"type": "DatasetReference"
							},
							"name": "StagingRegiones"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_Regiones",
								"type": "DatasetReference"
							},
							"name": "ValidationRegiones",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ConversionColumnas"
						},
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Region ID} as string,",
						"          {Region Desc} as string,",
						"          {Detalle region} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingRegiones",
						"StagingRegiones derive({Region ID} = toInteger(\r",
						"    case ( \r",
						"        (isNull({Region ID}) || (upper({Region ID}) == 'NULL')), '', trim({Region ID})\r",
						"    )\r",
						")) ~> ConversionColumnas",
						"ConversionColumnas filter(and(not(isNull({Region ID})), {Region ID} > 0)) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy({Region ID}),",
						"     {Region Desc} = first({Region Desc}),",
						"          {Detalle region} = first({Detalle region})) ~> RemoverDuplicados",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Region ID} as integer,",
						"          {Region Desc} as string,",
						"          {Detalle region} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Region ID},",
						"          {Region Desc},",
						"          {Detalle region}",
						"     )) ~> ValidationRegiones"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_Regiones')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_Regiones')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_subcategorias_producto')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "StagingSubcategoriasProducto"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "ValidationSubcategoriasProducto",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						},
						{
							"name": "ConversionColumnas"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingSubcategoriasProducto",
						"ConversionColumnas filter({Subcategoria Producto ID} != '') ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy({Subcategoria Producto ID}),",
						"     {Categoria Producto ID} = first({Categoria Producto ID}),",
						"          {Descripcion Subcategoria} = first({Descripcion Subcategoria})) ~> RemoverDuplicados",
						"StagingSubcategoriasProducto derive({Subcategoria Producto ID} = case ( \r",
						"    (isNull({Subcategoria Producto ID}) || (upper({Subcategoria Producto ID}) == 'NULL')), '', trim({Subcategoria Producto ID})\r",
						")) ~> ConversionColumnas",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Subcategoria Producto ID},",
						"          {Categoria Producto ID},",
						"          {Descripcion Subcategoria}",
						"     )) ~> ValidationSubcategoriasProducto"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_LT_productos_sub_categoria')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos_sub_categoria')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_target_region')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_db_target_region",
								"type": "DatasetReference"
							},
							"name": "StagingTargetRegion"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_db_target_region",
								"type": "DatasetReference"
							},
							"name": "ValidationTargetRegionn",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "ConversionColumnas"
						}
					],
					"scriptLines": [
						"source(output(",
						"          fecha as string,",
						"          anio as string,",
						"          mes as string,",
						"          {Region ID} as string,",
						"          Target as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingTargetRegion",
						"ConversionColumnas filter(not(isNull(fecha)) &&\r",
						"and(not(isNull(anio)), anio > 0) &&\r",
						"and(not(isNull(mes)), mes > 0) &&\r",
						"and(not(isNull({Region ID})), {Region ID} > 0) &&\r",
						"and(not(isNull(Target)), Target > 0)) ~> FiltrarInconsistencias",
						"StagingTargetRegion derive(fecha = toDate(\r",
						"    case ( \r",
						"        (isNull(fecha) || (upper(fecha) == 'NULL')), '', fecha\r",
						"    ), 'yyyyMM'\r",
						"),",
						"          anio = toInteger(\r",
						"    case ( \r",
						"        (isNull(anio) || (upper(anio) == 'NULL')), '', trim(anio)\r",
						"    )\r",
						"),",
						"          mes = toInteger(\r",
						"    case ( \r",
						"        (isNull(mes) || (upper(mes) == 'NULL')), '', trim(mes)\r",
						"    )\r",
						"),",
						"          {Region ID} = toInteger(    \r",
						"    case (         \r",
						"        (isNull({Region ID}) || (upper({Region ID}) == 'NULL')), '', trim({Region ID})     \r",
						"    )\r",
						"),",
						"          Target = toDecimal(\r",
						"    case ( \r",
						"        (isNull(Target) || (upper(Target) == 'NULL')), '', replace(trim(Target), ',', '')\r",
						"    ), 12, 2\r",
						")) ~> ConversionColumnas",
						"FiltrarInconsistencias sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          fecha as date,",
						"          anio as integer,",
						"          mes as integer,",
						"          {Region ID} as integer,",
						"          Target as decimal(12,2)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          fecha,",
						"          anio,",
						"          mes,",
						"          {Region ID},",
						"          Target",
						"     )) ~> ValidationTargetRegionn"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_db_target_region')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_db_target_region')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_VALIDATION_tipos_envio')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/validation"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_STAGING_tb_tipo_envio",
								"type": "DatasetReference"
							},
							"name": "StagingTiposEnvio"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_tipo_envio",
								"type": "DatasetReference"
							},
							"name": "ValidationTiposEnvio",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ConversionColumnas"
						},
						{
							"name": "FiltrarInconsistencias"
						},
						{
							"name": "RemoverDuplicados"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_tipo as string,",
						"          Descripcion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StagingTiposEnvio",
						"StagingTiposEnvio derive(id_tipo = toInteger(\r",
						"    case ( \r",
						"        (isNull({id_tipo}) || (upper({id_tipo}) == 'NULL')), '', trim({id_tipo})\r",
						"    )\r",
						")) ~> ConversionColumnas",
						"ConversionColumnas filter(and(not(isNull(id_tipo)), id_tipo > 0)) ~> FiltrarInconsistencias",
						"FiltrarInconsistencias aggregate(groupBy(id_tipo),",
						"     Descripcion = first(Descripcion)) ~> RemoverDuplicados",
						"RemoverDuplicados sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_tipo as integer,",
						"          Descripcion as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          id_tipo,",
						"          Descripcion",
						"     )) ~> ValidationTiposEnvio"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_STAGING_tb_tipo_envio')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_tipo_envio')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_categorias_y_subcategorias')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_categoria",
								"type": "DatasetReference"
							},
							"name": "Categorias"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "Subcategorias"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios"
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Categoria} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Categorias",
						"source(output(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Subcategorias",
						"Categorias, Subcategorias exists(Categorias@{Categoria Producto ID} == Subcategorias@{Categoria Producto ID},",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_categoria_producto = {Categoria Producto ID}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_subcategoria_producto = \"huérfano de categorias_producto\",",
						"          id_categoria_producto = id_categoria_producto,",
						"          desc_categoria = \"huérfano de categorias_producto\") ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          {Subcategoria Producto ID} = id_subcategoria_producto,",
						"          {Categoria Producto ID} = id_categoria_producto,",
						"          {Descripcion Subcategoria} = desc_categoria",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos_categoria')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos_sub_categoria')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_clientes_y_localizacion')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_customer",
								"type": "DatasetReference"
							},
							"name": "Customer"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_lt_customer_localizacion",
								"type": "DatasetReference"
							},
							"name": "CustomerLocalizacion"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_lt_customer_localizacion",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios"
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Cliente ID} as integer,",
						"          Nombre as string,",
						"          Apellido as string,",
						"          Segmento as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Customer",
						"source(output(",
						"          {Cliente ID} as integer,",
						"          Pais as string,",
						"          Ciudad as string,",
						"          Estado as string,",
						"          {Codigo Postal} as integer,",
						"          Region as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> CustomerLocalizacion",
						"Customer, CustomerLocalizacion exists(Customer@{Cliente ID} == CustomerLocalizacion@{Cliente ID},",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_cliente = {Cliente ID}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive({Cliente ID} = id_cliente,",
						"          Pais = \"huérfano de customer\",",
						"          Ciudad = \"huérfano de customer\",",
						"          Estado = \"huérfano de customer\",",
						"          {Codigo Postal} = 0,",
						"          Region = 0) ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Cliente ID} as integer,",
						"          Pais as string,",
						"          Ciudad as string,",
						"          Estado as string,",
						"          {Codigo Postal} as integer,",
						"          Region as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          {Cliente ID},",
						"          Pais,",
						"          Ciudad,",
						"          Estado,",
						"          {Codigo Postal},",
						"          Region",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_customer')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_lt_customer_localizacion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_detalle_envios_y_clientes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_detalle_envios",
								"type": "DatasetReference"
							},
							"name": "DetalleEnvios"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_customer",
								"type": "DatasetReference"
							},
							"name": "Clientes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_customer",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          num_order as string,",
						"          fec_orden as date,",
						"          fec_envio as date,",
						"          modo_envio as integer,",
						"          cliente_id as integer,",
						"          imp_subtotal as double,",
						"          region_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DetalleEnvios",
						"source(output(",
						"          {Cliente ID} as integer,",
						"          Nombre as string,",
						"          Apellido as string,",
						"          Segmento as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Clientes",
						"DetalleEnvios, Clientes exists(cliente_id == {Cliente ID},",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_cliente = cliente_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_cliente = id_cliente,",
						"          desc_nombres = \"huérfano de detalle_envios\",",
						"          desc_apellidos = \"huérfano de detalle_envios\",",
						"          desc_segmento = \"huérfano de detalle_envios\") ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Cliente ID} as integer,",
						"          Nombre as string,",
						"          Apellido as string,",
						"          Segmento as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Cliente ID} = id_cliente,",
						"          Nombre = desc_nombres,",
						"          Apellido = desc_apellidos,",
						"          Segmento = desc_segmento",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_detalle_envios')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_customer')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_detalle_envios_y_modo_envio')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_detalle_envios",
								"type": "DatasetReference"
							},
							"name": "DetalleEnvios"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_modo_envio",
								"type": "DatasetReference"
							},
							"name": "ModosEnvio"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_modo_envio",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          num_order as string,",
						"          fec_orden as date,",
						"          fec_envio as date,",
						"          modo_envio as integer,",
						"          cliente_id as integer,",
						"          imp_subtotal as double,",
						"          region_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DetalleEnvios",
						"source(output(",
						"          id_modo as integer,",
						"          Descripcion as string,",
						"          Tipo_x0020_ID as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ModosEnvio",
						"DetalleEnvios, ModosEnvio exists(modo_envio == id_modo,",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_modo_envio = modo_envio",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_modo_envio = id_modo_envio,",
						"          desc_modo_envio = \"huérfano de detalle_envios\",",
						"          id_tipo_envio = 0) ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_modo as integer,",
						"          Descripcion as string,",
						"          Tipo_x0020_ID as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          id_modo = id_modo_envio,",
						"          Descripcion = desc_modo_envio,",
						"          Tipo_x0020_ID = id_tipo_envio",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_detalle_envios')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_modo_envio')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_detalle_envios_y_regiones')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_detalle_envios",
								"type": "DatasetReference"
							},
							"name": "DetalleEnvios"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_Regiones",
								"type": "DatasetReference"
							},
							"name": "Regiones"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_Regiones",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          num_order as string,",
						"          fec_orden as date,",
						"          fec_envio as date,",
						"          modo_envio as integer,",
						"          cliente_id as integer,",
						"          imp_subtotal as double,",
						"          region_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DetalleEnvios",
						"source(output(",
						"          {Region ID} as integer,",
						"          {Region Desc} as string,",
						"          {Detalle region} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Regiones",
						"DetalleEnvios, Regiones exists(region_id == {Region ID},",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_region = region_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_region = id_region,",
						"          desc_region = \"huérfano de detalle_envios\",",
						"          desc_detalle = \"huérfano de detalle_envios\") ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Region ID} as integer,",
						"          {Region Desc} as string,",
						"          {Detalle region} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Region ID} = id_region,",
						"          {Region Desc} = desc_region,",
						"          {Detalle region} = desc_detalle",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_detalle_envios')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_Regiones')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_detalle_ordenes_y_productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_detalle_ordenes",
								"type": "DatasetReference"
							},
							"name": "DetalleOrdenes"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos",
								"type": "DatasetReference"
							},
							"name": "Productos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Detalle Orden} as integer,",
						"          {Numero Orden} as string,",
						"          {Producto ID} as integer,",
						"          {Linea Total} as double,",
						"          Cantidad as integer,",
						"          Descuento as double,",
						"          {Precio Unitario} as double,",
						"          Ganancia as double,",
						"          region_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DetalleOrdenes",
						"source(output(",
						"          {Producto ID} as integer,",
						"          {Numero Producto} as string,",
						"          {Producto Sub Categoria ID} as string,",
						"          {Nombre Producto} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Productos",
						"DetalleOrdenes, Productos exists(DetalleOrdenes@{Producto ID} == Productos@{Producto ID},",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_producto = {Producto ID}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_producto = id_producto,",
						"          desc_referencia = \"huérfano de detalle_ordenes\",",
						"          id_subcategoria_producto = \"huérfano de detalle_ordenes\",",
						"          desc_nombre = \"huérfano de detalle_ordenes\") ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Producto ID} as integer,",
						"          {Numero Producto} as string,",
						"          {Producto Sub Categoria ID} as string,",
						"          {Nombre Producto} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Producto ID} = id_producto,",
						"          {Numero Producto} = desc_referencia,",
						"          {Producto Sub Categoria ID} = id_subcategoria_producto,",
						"          {Nombre Producto} = desc_nombre",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_detalle_ordenes')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_detalle_ordenes_y_regiones')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_detalle_ordenes",
								"type": "DatasetReference"
							},
							"name": "DetalleOrdenes"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_Regiones",
								"type": "DatasetReference"
							},
							"name": "Regiones"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_Regiones",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios",
							"rejectedDataLinkedService": {
								"referenceName": "LS_FILESTORAGE_SOURCE_banmarket",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Detalle Orden} as integer,",
						"          {Numero Orden} as string,",
						"          {Producto ID} as integer,",
						"          {Linea Total} as double,",
						"          Cantidad as integer,",
						"          Descuento as double,",
						"          {Precio Unitario} as double,",
						"          Ganancia as double,",
						"          region_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DetalleOrdenes",
						"source(output(",
						"          {Region ID} as integer,",
						"          {Region Desc} as string,",
						"          {Detalle region} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Regiones",
						"DetalleOrdenes, Regiones exists(region_id == {Region ID},",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_region = region_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_region = id_region,",
						"          desc_region = \"huérfano de detalle_ordenes\",",
						"          desc_detalle = \"huérfano de detalle_ordenes\") ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Region ID} as integer,",
						"          {Region Desc} as string,",
						"          {Detalle region} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     outputRejectedData: true,",
						"     mapColumn(",
						"          {Region ID} = id_region,",
						"          {Region Desc} = desc_region,",
						"          {Detalle region} = desc_detalle",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_detalle_ordenes')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_Regiones')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_FILESTORAGE_SOURCE_banmarket')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_modos_envio_y_tipos_envio')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_modo_envio",
								"type": "DatasetReference"
							},
							"name": "ModosEnvio"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_tipo_envio",
								"type": "DatasetReference"
							},
							"name": "TiposEnvio"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_tb_tipo_envio",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios"
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_modo as integer,",
						"          Descripcion as string,",
						"          Tipo_x0020_ID as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ModosEnvio",
						"source(output(",
						"          id_tipo as integer,",
						"          Descripcion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> TiposEnvio",
						"ModosEnvio, TiposEnvio exists(Tipo_x0020_ID == id_tipo,",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_tipo_envio = Tipo_x0020_ID",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_tipo_envio = id_tipo_envio,",
						"          desc_tipo_envio = \"huérfano de modos_envio\") ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_tipo as integer,",
						"          Descripcion as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id_tipo = id_tipo_envio,",
						"          Descripcion = desc_tipo_envio",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_modo_envio')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_tb_tipo_envio')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLOW_huerfanos_productos_y_subcategorias')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2.transform/huerfanos"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos",
								"type": "DatasetReference"
							},
							"name": "Productos"
						},
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "Subcategorias"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_SQL_VALIDATION_LT_productos_sub_categoria",
								"type": "DatasetReference"
							},
							"name": "CrearPadresFicticios"
						}
					],
					"transformations": [
						{
							"name": "ListaHuerfanos"
						},
						{
							"name": "ListaIDsHuerfanos"
						},
						{
							"name": "ListaPadresFicticios"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Producto ID} as integer,",
						"          {Numero Producto} as string,",
						"          {Producto Sub Categoria ID} as string,",
						"          {Nombre Producto} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Productos",
						"source(output(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Subcategorias",
						"Productos, Subcategorias exists({Producto Sub Categoria ID} == {Subcategoria Producto ID},",
						"     negate:true,",
						"     broadcast: 'auto')~> ListaHuerfanos",
						"ListaHuerfanos select(mapColumn(",
						"          id_subcategoria_producto = {Producto Sub Categoria ID}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListaIDsHuerfanos",
						"ListaIDsHuerfanos derive(id_subcategoria_producto = id_subcategoria_producto,",
						"          id_categoria_producto = \"huérfano de productos\",",
						"          desc_subcategoria = \"huérfano de productos\") ~> ListaPadresFicticios",
						"ListaPadresFicticios sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Subcategoria Producto ID} as string,",
						"          {Categoria Producto ID} as string,",
						"          {Descripcion Subcategoria} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          {Subcategoria Producto ID} = id_subcategoria_producto,",
						"          {Categoria Producto ID} = id_categoria_producto,",
						"          {Descripcion Subcategoria} = desc_subcategoria",
						"     )) ~> CrearPadresFicticios"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_VALIDATION_LT_productos_sub_categoria')]"
			]
		}
	]
}